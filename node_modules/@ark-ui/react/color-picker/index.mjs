'use client';
import { ColorPicker as ColorPicker$1 } from './color-picker.mjs';
import { ColorPickerArea } from './color-picker-area.mjs';
import { ColorPickerAreaBackground } from './color-picker-area-background.mjs';
export { useColorPickerAreaContext } from './color-picker-area-context.mjs';
import { ColorPickerAreaThumb } from './color-picker-area-thumb.mjs';
import { ColorPickerChannelInput } from './color-picker-channel-input.mjs';
import { ColorPickerChannelSlider } from './color-picker-channel-slider.mjs';
export { useColorPickerChannelSliderContext } from './color-picker-channel-slider-context.mjs';
import { ColorPickerChannelSliderThumb } from './color-picker-channel-slider-thumb.mjs';
import { ColorPickerChannelSliderTrack } from './color-picker-channel-slider-track.mjs';
import { ColorPickerContent } from './color-picker-content.mjs';
export { useColorPickerContext } from './color-picker-context.mjs';
import { ColorPickerControl } from './color-picker-control.mjs';
import { ColorPickerEyeDropperTrigger } from './color-picker-eye-dropper-trigger.mjs';
import { ColorPickerFormatSelect } from './color-picker-format-select.mjs';
import { ColorPickerFormatTrigger } from './color-picker-format-trigger.mjs';
import { ColorPickerLabel } from './color-picker-label.mjs';
import { ColorPickerPositioner } from './color-picker-positioner.mjs';
import { ColorPickerSwatch } from './color-picker-swatch.mjs';
import { ColorPickerSwatchGroup } from './color-picker-swatch-group.mjs';
import { ColorPickerSwatchIndicator } from './color-picker-swatch-indicator.mjs';
import { ColorPickerSwatchTrigger } from './color-picker-swatch-trigger.mjs';
import { ColorPickerTransparencyGrid } from './color-picker-transparency-grid.mjs';
import { ColorPickerTrigger } from './color-picker-trigger.mjs';
import { ColorPickerValueText } from './color-picker-value-text.mjs';
import { ColorPickerView } from './color-picker-view.mjs';

const ColorPicker = Object.assign(ColorPicker$1, {
  Root: ColorPicker$1,
  Area: ColorPickerArea,
  AreaBackground: ColorPickerAreaBackground,
  AreaThumb: ColorPickerAreaThumb,
  ChannelInput: ColorPickerChannelInput,
  ChannelSlider: ColorPickerChannelSlider,
  ChannelSliderThumb: ColorPickerChannelSliderThumb,
  ChannelSliderTrack: ColorPickerChannelSliderTrack,
  Content: ColorPickerContent,
  Control: ColorPickerControl,
  EyeDropperTrigger: ColorPickerEyeDropperTrigger,
  FormatTrigger: ColorPickerFormatTrigger,
  FormatSelect: ColorPickerFormatSelect,
  Label: ColorPickerLabel,
  Positioner: ColorPickerPositioner,
  Swatch: ColorPickerSwatch,
  SwatchGroup: ColorPickerSwatchGroup,
  SwatchIndicator: ColorPickerSwatchIndicator,
  SwatchTrigger: ColorPickerSwatchTrigger,
  TransparencyGrid: ColorPickerTransparencyGrid,
  Trigger: ColorPickerTrigger,
  ValueText: ColorPickerValueText,
  View: ColorPickerView
});

export { ColorPicker, ColorPickerArea, ColorPickerAreaBackground, ColorPickerAreaThumb, ColorPickerChannelInput, ColorPickerChannelSlider, ColorPickerChannelSliderThumb, ColorPickerChannelSliderTrack, ColorPickerContent, ColorPickerControl, ColorPickerEyeDropperTrigger, ColorPickerFormatSelect, ColorPickerFormatTrigger, ColorPickerLabel, ColorPickerPositioner, ColorPickerSwatch, ColorPickerSwatchGroup, ColorPickerSwatchIndicator, ColorPickerSwatchTrigger, ColorPickerTransparencyGrid, ColorPickerTrigger, ColorPickerValueText, ColorPickerView };
