'use client';
import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import '@zag-js/tabs';
import { forwardRef } from 'react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import '../presence/index.mjs';
import { useTabsContext } from './tabs-context.mjs';
import { usePresencePropsContext } from '../presence/presence-props-context.mjs';
import { usePresence } from '../presence/use-presence.mjs';
import { PresenceProvider } from '../presence/presence-context.mjs';

const TabContent = forwardRef((props, ref) => {
  const [contentProps, localProps] = createSplitProps()(props, ["value"]);
  const api = useTabsContext();
  const presenceProps = usePresencePropsContext();
  const presenceApi = usePresence({ ...presenceProps, present: api.value === props.value });
  const mergedProps = mergeProps(
    api.getContentProps(contentProps),
    presenceApi.getPresenceProps(ref),
    localProps
  );
  return /* @__PURE__ */ jsx(PresenceProvider, { value: presenceApi, children: presenceApi.isUnmounted ? null : /* @__PURE__ */ jsx(ark.div, { ...mergedProps }) });
});
TabContent.displayName = "TabContent";

export { TabContent };
