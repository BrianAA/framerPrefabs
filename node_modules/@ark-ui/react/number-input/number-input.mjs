'use client';
import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { NumberInputProvider } from './number-input-context.mjs';
import { useNumberInput } from './use-number-input.mjs';

const NumberInput = forwardRef((props, ref) => {
  const [useNumberInputProps, { children, ...localProps }] = createSplitProps()(props, [
    "allowMouseWheel",
    "allowOverflow",
    "clampValueOnBlur",
    "defaultValue",
    "dir",
    "disabled",
    "focusInputOnChange",
    "form",
    "formatOptions",
    "getRootNode",
    "id",
    "ids",
    "inputMode",
    "invalid",
    "locale",
    "max",
    "min",
    "name",
    "onFocusChange",
    "onValueChange",
    "onValueInvalid",
    "pattern",
    "readOnly",
    "spinOnPress",
    "step",
    "translations",
    "value"
  ]);
  const api = useNumberInput(useNumberInputProps);
  const mergedProps = mergeProps(api.rootProps, localProps);
  const view = runIfFn(children, api);
  return /* @__PURE__ */ jsx(NumberInputProvider, { value: api, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref, children: view }) });
});
NumberInput.displayName = "NumberInput";

export { NumberInput };
