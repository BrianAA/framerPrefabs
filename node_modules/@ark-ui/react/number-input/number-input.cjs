'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const runIfFn = require('../run-if-fn.cjs');
const numberInputContext = require('./number-input-context.cjs');
const useNumberInput = require('./use-number-input.cjs');

const NumberInput = react.forwardRef((props, ref) => {
  const [useNumberInputProps, { children, ...localProps }] = createSplitProps.createSplitProps()(props, [
    "allowMouseWheel",
    "allowOverflow",
    "clampValueOnBlur",
    "defaultValue",
    "dir",
    "disabled",
    "focusInputOnChange",
    "form",
    "formatOptions",
    "getRootNode",
    "id",
    "ids",
    "inputMode",
    "invalid",
    "locale",
    "max",
    "min",
    "name",
    "onFocusChange",
    "onValueChange",
    "onValueInvalid",
    "pattern",
    "readOnly",
    "spinOnPress",
    "step",
    "translations",
    "value"
  ]);
  const api = useNumberInput.useNumberInput(useNumberInputProps);
  const mergedProps = react$1.mergeProps(api.rootProps, localProps);
  const view = runIfFn.runIfFn(children, api);
  return /* @__PURE__ */ jsxRuntime.jsx(numberInputContext.NumberInputProvider, { value: api, children: /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref, children: view }) });
});
NumberInput.displayName = "NumberInput";

exports.NumberInput = NumberInput;
