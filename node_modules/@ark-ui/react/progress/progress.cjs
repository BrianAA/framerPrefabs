'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const runIfFn = require('../run-if-fn.cjs');
const progressContext = require('./progress-context.cjs');
const useProgress = require('./use-progress.cjs');

const Progress = react.forwardRef((props, ref) => {
  const [progressProps, { children, ...localProps }] = createSplitProps.createSplitProps()(props, [
    "defaultValue",
    "dir",
    "getRootNode",
    "id",
    "max",
    "min",
    "orientation",
    "translations",
    "value"
  ]);
  const api = useProgress.useProgress(progressProps);
  const mergedProps = react$1.mergeProps(api.rootProps, localProps);
  const view = runIfFn.runIfFn(children, api);
  return /* @__PURE__ */ jsxRuntime.jsx(progressContext.ProgressProvider, { value: api, children: /* @__PURE__ */ jsxRuntime.jsx(factory.ark.nav, { ...mergedProps, ref, children: view }) });
});
Progress.displayName = "Progress";

exports.Progress = Progress;
