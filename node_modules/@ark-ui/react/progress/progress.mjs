'use client';
import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { ProgressProvider } from './progress-context.mjs';
import { useProgress } from './use-progress.mjs';

const Progress = forwardRef((props, ref) => {
  const [progressProps, { children, ...localProps }] = createSplitProps()(props, [
    "defaultValue",
    "dir",
    "getRootNode",
    "id",
    "max",
    "min",
    "orientation",
    "translations",
    "value"
  ]);
  const api = useProgress(progressProps);
  const mergedProps = mergeProps(api.rootProps, localProps);
  const view = runIfFn(children, api);
  return /* @__PURE__ */ jsx(ProgressProvider, { value: api, children: /* @__PURE__ */ jsx(ark.nav, { ...mergedProps, ref, children: view }) });
});
Progress.displayName = "Progress";

export { Progress };
