'use client';
import { jsx } from 'react/jsx-runtime';
import { segmentGroupAnatomy } from '@ark-ui/anatomy';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { useSegmentGroupContext } from './segment-group-context.mjs';
import { SegmentGroupItemProvider } from './segment-group-item-context.mjs';

const SegmentGroupItem = forwardRef(
  (props, ref) => {
    const [itemProps, { children, ...localProps }] = createSplitProps()(
      props,
      ["value", "disabled", "invalid"]
    );
    const api = useSegmentGroupContext();
    const mergedProps = mergeProps(
      api.getItemProps(itemProps),
      segmentGroupAnatomy.build().item.attrs,
      localProps
    );
    const itemState = api.getItemState(itemProps);
    const view = runIfFn(children, itemState);
    return /* @__PURE__ */ jsx(SegmentGroupItemProvider, { value: itemProps, children: /* @__PURE__ */ jsx(ark.label, { ...mergedProps, ref, children: view }) });
  }
);
SegmentGroupItem.displayName = "SegmentGroupItem";

export { SegmentGroupItem };
