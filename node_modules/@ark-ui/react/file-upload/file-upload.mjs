'use client';
import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { FileUploadProvider } from './file-upload-context.mjs';
import { useFileUpload } from './use-file-upload.mjs';

const FileUpload = forwardRef((props, ref) => {
  const [useFileUploadProps, { children, ...divProps }] = createSplitProps()(
    props,
    [
      "accept",
      "allowDrop",
      "dir",
      "disabled",
      "files",
      "getRootNode",
      "id",
      "ids",
      "locale",
      "maxFiles",
      "maxFileSize",
      "minFileSize",
      "name",
      "onFileAccept",
      "onFileReject",
      "onFilesChange",
      "translations",
      "validate"
    ]
  );
  const api = useFileUpload(useFileUploadProps);
  const mergedProps = mergeProps(api.rootProps, divProps);
  const view = runIfFn(children, api);
  return /* @__PURE__ */ jsx(FileUploadProvider, { value: api, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref, children: view }) });
});
FileUpload.displayName = "FileUpload";

export { FileUpload };
