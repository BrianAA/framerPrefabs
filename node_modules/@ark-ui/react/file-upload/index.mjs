'use client';
import { FileUpload as FileUpload$1 } from './file-upload.mjs';
export { useFileUploadContext } from './file-upload-context.mjs';
import { FileUploadDropzone } from './file-upload-dropzone.mjs';
import { FileUploadItem } from './file-upload-item.mjs';
import { FileUploadItemDeleteTrigger } from './file-upload-item-delete-trigger.mjs';
import { FileUploadItemGroup } from './file-upload-item-group.mjs';
import { FileUploadItemName } from './file-upload-item-name.mjs';
import { FileUploadItemPreview } from './file-upload-item-preview.mjs';
import { FileUploadItemPreviewImage } from './file-upload-item-preview-image.mjs';
import { FileUploadItemSizeText } from './file-upload-item-size-text.mjs';
import { FileUploadLabel } from './file-upload-label.mjs';
import { FileUploadTrigger } from './file-upload-trigger.mjs';

const FileUpload = Object.assign(FileUpload$1, {
  Root: FileUpload$1,
  Dropzone: FileUploadDropzone,
  Item: FileUploadItem,
  ItemDeleteTrigger: FileUploadItemDeleteTrigger,
  ItemGroup: FileUploadItemGroup,
  ItemName: FileUploadItemName,
  ItemPreview: FileUploadItemPreview,
  ItemPreviewImage: FileUploadItemPreviewImage,
  ItemSizeText: FileUploadItemSizeText,
  Label: FileUploadLabel,
  Trigger: FileUploadTrigger
});

export { FileUpload, FileUploadDropzone, FileUploadItem, FileUploadItemDeleteTrigger, FileUploadItemGroup, FileUploadItemName, FileUploadItemPreviewImage, FileUploadItemSizeText, FileUploadLabel, FileUploadTrigger };
