'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const toggleGroupContext = require('./toggle-group-context.cjs');
const useToggleGroup = require('./use-toggle-group.cjs');

const ToggleGroup = react.forwardRef((props, ref) => {
  const [toggleGroup, localProps] = createSplitProps.createSplitProps()(props, [
    "defaultValue",
    "dir",
    "disabled",
    "getRootNode",
    "id",
    "ids",
    "loop",
    "multiple",
    "onValueChange",
    "orientation",
    "rovingFocus",
    "value"
  ]);
  const api = useToggleGroup.useToggleGroup(toggleGroup);
  const mergedProps = react$1.mergeProps(api.rootProps, localProps);
  return /* @__PURE__ */ jsxRuntime.jsx(toggleGroupContext.ToggleGroupProvider, { value: api, children: /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref }) });
});
ToggleGroup.displayName = "ToggleGroup";

exports.ToggleGroup = ToggleGroup;
