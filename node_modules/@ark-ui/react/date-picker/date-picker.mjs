'use client';
import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import '../presence/index.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { DatePickerProvider } from './date-picker-context.mjs';
import { useDatePicker } from './use-date-picker.mjs';
import { splitPresenceProps } from '../presence/split-presence-props.mjs';
import { usePresence } from '../presence/use-presence.mjs';
import { PresenceProvider } from '../presence/presence-context.mjs';

const DatePicker = forwardRef((props, ref) => {
  const [presenceProps, datePickerProps] = splitPresenceProps(props);
  const [useDatePickerProps, { children, ...localProps }] = createSplitProps()(
    datePickerProps,
    [
      "closeOnSelect",
      "defaultValue",
      "dir",
      "disabled",
      "fixedWeeks",
      "focusedValue",
      "format",
      "getRootNode",
      "id",
      "ids",
      "isDateUnavailable",
      "isDateUnavailable",
      "locale",
      "max",
      "min",
      "modal",
      "name",
      "numOfMonths",
      "onFocusChange",
      "onOpenChange",
      "onValueChange",
      "onViewChange",
      "open",
      "parse",
      "positioning",
      "readOnly",
      "selectionMode",
      "startOfWeek",
      "timeZone",
      "translations",
      "value",
      "view"
    ]
  );
  const api = useDatePicker(useDatePickerProps);
  const presenceApi = usePresence(mergeProps({ present: api.isOpen }, presenceProps));
  const view = runIfFn(children, api);
  const mergedProps = mergeProps(api.rootProps, localProps);
  return /* @__PURE__ */ jsx(DatePickerProvider, { value: api, children: /* @__PURE__ */ jsx(PresenceProvider, { value: presenceApi, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref, children: view }) }) });
});
DatePicker.displayName = "DatePicker";

export { DatePicker };
