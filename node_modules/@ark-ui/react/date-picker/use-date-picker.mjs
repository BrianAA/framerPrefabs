'use client';
import * as datePicker from '@zag-js/date-picker';
import { useMachine, normalizeProps } from '@zag-js/react';
import { useId } from 'react';
import '../environment/index.mjs';
import { useEvent } from '../use-event.mjs';
import { useEnvironmentContext } from '../environment/environment-context.mjs';

const useDatePicker = (props = {}) => {
  const initialContext = {
    id: useId(),
    getRootNode: useEnvironmentContext(),
    ...props,
    focusedValue: props.focusedValue ? datePicker.parse(props.focusedValue) : void 0,
    value: props.defaultValue ? datePicker.parse(props.defaultValue) : void 0
  };
  const context = {
    ...initialContext,
    value: props.value ? datePicker.parse(props.value) : void 0,
    onValueChange: useEvent(props.onValueChange, { sync: true }),
    onFocusChange: useEvent(props.onFocusChange),
    onViewChange: useEvent(props.onViewChange),
    onOpenChange: useEvent(props.onOpenChange)
  };
  const [state, send] = useMachine(datePicker.machine(initialContext), { context });
  return datePicker.connect(state, send, normalizeProps);
};

export { useDatePicker };
