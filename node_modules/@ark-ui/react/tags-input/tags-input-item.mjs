'use client';
import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { useTagsInputContext } from './tags-input-context.mjs';
import { TagsInputItemProvider } from './tags-input-item-context.mjs';

const TagsInputItem = forwardRef((props, ref) => {
  const [itemProps, { children, ...localProps }] = createSplitProps()(props, [
    "index",
    "disabled",
    "value"
  ]);
  const api = useTagsInputContext();
  const mergedProps = mergeProps(api.getItemProps(itemProps), localProps);
  const itemState = api.getItemState(itemProps);
  const view = runIfFn(children, itemState);
  return /* @__PURE__ */ jsx(TagsInputItemProvider, { value: itemProps, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref, children: view }) });
});
TagsInputItem.displayName = "TagsInputItem";

export { TagsInputItem };
