'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const runIfFn = require('../run-if-fn.cjs');
const tagsInputContext = require('./tags-input-context.cjs');
const useTagsInput = require('./use-tags-input.cjs');

const TagsInput = react.forwardRef((props, ref) => {
  const [useTagsInputProps, { children, ...inputProps }] = createSplitProps.createSplitProps()(
    props,
    [
      "addOnPaste",
      "allowEditTag",
      "allowOverflow",
      "autoFocus",
      "blurBehavior",
      "defaultValue",
      "delimiter",
      "dir",
      "disabled",
      "form",
      "getRootNode",
      "id",
      "ids",
      "inputValue",
      "invalid",
      "max",
      "maxLength",
      "name",
      "onFocusOutside",
      "onHighlightChange",
      "onInteractOutside",
      "onPointerDownOutside",
      "onValueChange",
      "onValueInvalid",
      "readOnly",
      "translations",
      "validate",
      "value"
    ]
  );
  const api = useTagsInput.useTagsInput(useTagsInputProps);
  const mergedProps = react$1.mergeProps(api.rootProps, inputProps);
  const view = runIfFn.runIfFn(children, api);
  return /* @__PURE__ */ jsxRuntime.jsxs(tagsInputContext.TagsInputProvider, { value: api, children: [
    /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref, children: view }),
    /* @__PURE__ */ jsxRuntime.jsx("input", { ...api.hiddenInputProps })
  ] });
});
TagsInput.displayName = "TagsInput";

exports.TagsInput = TagsInput;
