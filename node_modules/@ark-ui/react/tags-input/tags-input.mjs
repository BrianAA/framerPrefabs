'use client';
import { jsxs, jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { TagsInputProvider } from './tags-input-context.mjs';
import { useTagsInput } from './use-tags-input.mjs';

const TagsInput = forwardRef((props, ref) => {
  const [useTagsInputProps, { children, ...inputProps }] = createSplitProps()(
    props,
    [
      "addOnPaste",
      "allowEditTag",
      "allowOverflow",
      "autoFocus",
      "blurBehavior",
      "defaultValue",
      "delimiter",
      "dir",
      "disabled",
      "form",
      "getRootNode",
      "id",
      "ids",
      "inputValue",
      "invalid",
      "max",
      "maxLength",
      "name",
      "onFocusOutside",
      "onHighlightChange",
      "onInteractOutside",
      "onPointerDownOutside",
      "onValueChange",
      "onValueInvalid",
      "readOnly",
      "translations",
      "validate",
      "value"
    ]
  );
  const api = useTagsInput(useTagsInputProps);
  const mergedProps = mergeProps(api.rootProps, inputProps);
  const view = runIfFn(children, api);
  return /* @__PURE__ */ jsxs(TagsInputProvider, { value: api, children: [
    /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref, children: view }),
    /* @__PURE__ */ jsx("input", { ...api.hiddenInputProps })
  ] });
});
TagsInput.displayName = "TagsInput";

export { TagsInput };
