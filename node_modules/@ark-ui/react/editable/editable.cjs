'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const runIfFn = require('../run-if-fn.cjs');
const editableContext = require('./editable-context.cjs');
const useEditable = require('./use-editable.cjs');

const Editable = react.forwardRef((props, ref) => {
  const [useEditableProps, { children, ...localProps }] = createSplitProps.createSplitProps()(
    props,
    [
      "activationMode",
      "autoResize",
      "defaultValue",
      "dir",
      "disabled",
      "finalFocusEl",
      "form",
      "getRootNode",
      "id",
      "ids",
      "invalid",
      "maxLength",
      "name",
      "onEdit",
      "onFocusOutside",
      "onInteractOutside",
      "onPointerDownOutside",
      "onValueChange",
      "onValueCommit",
      "onValueRevert",
      "placeholder",
      "readOnly",
      "selectOnFocus",
      "startWithEditView",
      "submitMode",
      "translations",
      "value"
    ]
  );
  const api = useEditable.useEditable(useEditableProps);
  const mergedProps = react$1.mergeProps(api.rootProps, localProps);
  const view = runIfFn.runIfFn(children, api);
  return /* @__PURE__ */ jsxRuntime.jsx(editableContext.EditableProvider, { value: api, children: /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref, children: view }) });
});
Editable.displayName = "Editable";

exports.Editable = Editable;
