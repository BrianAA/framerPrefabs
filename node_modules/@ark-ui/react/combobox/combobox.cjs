'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
require('../presence/index.cjs');
const runIfFn = require('../run-if-fn.cjs');
const comboboxContext = require('./combobox-context.cjs');
const useCombobox = require('./use-combobox.cjs');
const splitPresenceProps = require('../presence/split-presence-props.cjs');
const usePresence = require('../presence/use-presence.cjs');
const presenceContext = require('../presence/presence-context.cjs');

const ComboboxImpl = (props, ref) => {
  const [presenceProps, comboboxProps] = splitPresenceProps.splitPresenceProps(props);
  const [useComboboxProps, { children, ...localProps }] = createSplitProps.createSplitProps()(
    comboboxProps,
    [
      "allowCustomValue",
      "autoFocus",
      "closeOnSelect",
      "defaultValue",
      "dir",
      "disabled",
      "form",
      "getRootNode",
      "highlightedValue",
      "id",
      "ids",
      "inputBehavior",
      "inputValue",
      "invalid",
      "isItemDisabled",
      "items",
      "itemToString",
      "itemToValue",
      "loop",
      "multiple",
      "name",
      "onFocusOutside",
      "onHighlightChange",
      "onInputValueChange",
      "onInteractOutside",
      "onOpenChange",
      "onOpenChange",
      "onPointerDownOutside",
      "onValueChange",
      "openOnClick",
      "placeholder",
      "positioning",
      "readOnly",
      "selectionBehavior",
      "selectOnBlur",
      "translations",
      "value"
    ]
  );
  const api = useCombobox.useCombobox(useComboboxProps);
  const presenceApi = usePresence.usePresence(react$1.mergeProps({ present: api.isOpen }, presenceProps));
  const view = runIfFn.runIfFn(children, api);
  const mergedProps = react$1.mergeProps(api.rootProps, localProps);
  return /* @__PURE__ */ jsxRuntime.jsx(comboboxContext.ComboboxProvider, { value: api, children: /* @__PURE__ */ jsxRuntime.jsx(presenceContext.PresenceProvider, { value: presenceApi, children: /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref, children: view }) }) });
};
const Combobox = react.forwardRef(ComboboxImpl);

exports.Combobox = Combobox;
