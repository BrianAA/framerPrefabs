'use client';
import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { SwitchProvider } from './switch-context.mjs';
import { useSwitch } from './use-switch.mjs';

const Switch = forwardRef((props, ref) => {
  const [switchProps, { children, ...localProps }] = createSplitProps()(props, [
    "checked",
    "defaultChecked",
    "dir",
    "disabled",
    "form",
    "getRootNode",
    "id",
    "ids",
    "invalid",
    "label",
    "name",
    "onCheckedChange",
    "required",
    "value"
  ]);
  const api = useSwitch(switchProps);
  const mergedProps = mergeProps(api.rootProps, localProps);
  const view = runIfFn(children, api);
  return /* @__PURE__ */ jsx(SwitchProvider, { value: api, children: /* @__PURE__ */ jsx(ark.label, { ...mergedProps, ref, children: view }) });
});
Switch.displayName = "Switch";

export { Switch };
