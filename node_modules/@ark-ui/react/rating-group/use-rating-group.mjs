'use client';
import * as rating from '@zag-js/rating-group';
import { useMachine, normalizeProps } from '@zag-js/react';
import { useId } from 'react';
import '../environment/index.mjs';
import { useEvent } from '../use-event.mjs';
import { useEnvironmentContext } from '../environment/environment-context.mjs';

const useRatingGroup = (props) => {
  const initialContext = {
    id: useId(),
    getRootNode: useEnvironmentContext(),
    ...props,
    value: props.defaultValue
  };
  const context = {
    ...initialContext,
    value: props.value,
    onValueChange: useEvent(props.onValueChange, { sync: true }),
    onHoverChange: useEvent(props.onHoverChange)
  };
  const [state, send] = useMachine(rating.machine(initialContext), {
    context
  });
  return rating.connect(state, send, normalizeProps);
};

export { useRatingGroup };
