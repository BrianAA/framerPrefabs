import { type JSX, type ReactNode } from 'react';
import { type HTMLArkProps } from '../factory';
import { type UsePresenceProps } from '../presence';
import { type Assign, type CollectionItem } from '../types';
import { type UseSelectProps, type UseSelectReturn } from './use-select';
export interface SelectProps<T extends CollectionItem> extends Assign<Assign<HTMLArkProps<'div'>, {
    children?: ReactNode | ((api: UseSelectReturn<T>) => ReactNode);
}>, UseSelectProps<T>>, UsePresenceProps {
}
export interface SelectComponent {
    <T extends CollectionItem>(props: SelectProps<T> & React.RefAttributes<HTMLDivElement>): JSX.Element;
}
export declare const Select: SelectComponent;
