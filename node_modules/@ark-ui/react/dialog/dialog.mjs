'use client';
import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/core';
import 'react';
import '../presence/index.mjs';
import { splitPresenceProps } from '../presence/split-presence-props.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { DialogProvider } from './dialog-context.mjs';
import { useDialog } from './use-dialog.mjs';
import { usePresence } from '../presence/use-presence.mjs';
import { PresencePropsProvider } from '../presence/presence-props-context.mjs';
import { PresenceProvider } from '../presence/presence-context.mjs';

const Dialog = (props) => {
  const [presenceProps, { children, ...localProps }] = splitPresenceProps(props);
  const api = useDialog(localProps);
  const presenceApi = usePresence(mergeProps({ present: api.isOpen }, presenceProps));
  const view = runIfFn(children, api);
  return /* @__PURE__ */ jsx(DialogProvider, { value: api, children: /* @__PURE__ */ jsx(PresencePropsProvider, { value: presenceProps, children: /* @__PURE__ */ jsx(PresenceProvider, { value: presenceApi, children: view }) }) });
};

export { Dialog };
