'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const core = require('@zag-js/core');
require('react');
require('../presence/index.cjs');
const splitPresenceProps = require('../presence/split-presence-props.cjs');
const runIfFn = require('../run-if-fn.cjs');
const dialogContext = require('./dialog-context.cjs');
const useDialog = require('./use-dialog.cjs');
const usePresence = require('../presence/use-presence.cjs');
const presencePropsContext = require('../presence/presence-props-context.cjs');
const presenceContext = require('../presence/presence-context.cjs');

const Dialog = (props) => {
  const [presenceProps, { children, ...localProps }] = splitPresenceProps.splitPresenceProps(props);
  const api = useDialog.useDialog(localProps);
  const presenceApi = usePresence.usePresence(core.mergeProps({ present: api.isOpen }, presenceProps));
  const view = runIfFn.runIfFn(children, api);
  return /* @__PURE__ */ jsxRuntime.jsx(dialogContext.DialogProvider, { value: api, children: /* @__PURE__ */ jsxRuntime.jsx(presencePropsContext.PresencePropsProvider, { value: presenceProps, children: /* @__PURE__ */ jsxRuntime.jsx(presenceContext.PresenceProvider, { value: presenceApi, children: view }) }) });
};

exports.Dialog = Dialog;
