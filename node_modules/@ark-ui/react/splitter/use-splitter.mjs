'use client';
import { useMachine, normalizeProps } from '@zag-js/react';
import * as splitter from '@zag-js/splitter';
import { useId } from 'react';
import '../environment/index.mjs';
import { useEvent } from '../use-event.mjs';
import { useEnvironmentContext } from '../environment/environment-context.mjs';

const useSplitter = (props) => {
  const initialContext = {
    id: useId(),
    getRootNode: useEnvironmentContext(),
    ...props,
    size: props.defaultSize
  };
  const context = {
    ...initialContext,
    size: props.size,
    onSizeChange: useEvent(props.onSizeChange, { sync: true }),
    onSizeChangeEnd: useEvent(props.onSizeChangeEnd),
    onSizeChangeStart: useEvent(props.onSizeChangeStart)
  };
  const [state, send] = useMachine(splitter.machine(initialContext), { context });
  return splitter.connect(state, send, normalizeProps);
};

export { useSplitter };
