'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
require('../presence/index.cjs');
const accordionContext = require('./accordion-context.cjs');
const useAccordion = require('./use-accordion.cjs');
const splitPresenceProps = require('../presence/split-presence-props.cjs');
const presencePropsContext = require('../presence/presence-props-context.cjs');

const Accordion = react.forwardRef((props, ref) => {
  const [presenceProps, accordionProps] = splitPresenceProps.splitPresenceProps(props);
  const [useAccordionProps, localProps] = createSplitProps.createSplitProps()(accordionProps, [
    "collapsible",
    "defaultValue",
    "dir",
    "disabled",
    "getRootNode",
    "id",
    "ids",
    "multiple",
    "onFocusChange",
    "onValueChange",
    "orientation",
    "value"
  ]);
  const api = useAccordion.useAccordion(useAccordionProps);
  const mergedProps = react$1.mergeProps(api.rootProps, localProps);
  return /* @__PURE__ */ jsxRuntime.jsx(accordionContext.AccordionProvider, { value: api, children: /* @__PURE__ */ jsxRuntime.jsx(presencePropsContext.PresencePropsProvider, { value: presenceProps, children: /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref }) }) });
});
Accordion.displayName = "Accordion";

exports.Accordion = Accordion;
