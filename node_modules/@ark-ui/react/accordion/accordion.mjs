'use client';
import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import '../presence/index.mjs';
import { AccordionProvider } from './accordion-context.mjs';
import { useAccordion } from './use-accordion.mjs';
import { splitPresenceProps } from '../presence/split-presence-props.mjs';
import { PresencePropsProvider } from '../presence/presence-props-context.mjs';

const Accordion = forwardRef((props, ref) => {
  const [presenceProps, accordionProps] = splitPresenceProps(props);
  const [useAccordionProps, localProps] = createSplitProps()(accordionProps, [
    "collapsible",
    "defaultValue",
    "dir",
    "disabled",
    "getRootNode",
    "id",
    "ids",
    "multiple",
    "onFocusChange",
    "onValueChange",
    "orientation",
    "value"
  ]);
  const api = useAccordion(useAccordionProps);
  const mergedProps = mergeProps(api.rootProps, localProps);
  return /* @__PURE__ */ jsx(AccordionProvider, { value: api, children: /* @__PURE__ */ jsx(PresencePropsProvider, { value: presenceProps, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref }) }) });
});
Accordion.displayName = "Accordion";

export { Accordion };
