'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
require('../presence/index.cjs');
const runIfFn = require('../run-if-fn.cjs');
const accordionContext = require('./accordion-context.cjs');
const accordionItemContext = require('./accordion-item-context.cjs');
const presencePropsContext = require('../presence/presence-props-context.cjs');
const usePresence = require('../presence/use-presence.cjs');
const presenceContext = require('../presence/presence-context.cjs');

const AccordionItem = react.forwardRef((props, ref) => {
  const [itemProps, { children, ...localProps }] = createSplitProps.createSplitProps()(props, [
    "value",
    "disabled"
  ]);
  const api = accordionContext.useAccordionContext();
  const itemState = api.getItemState(itemProps);
  const mergedProps = react$1.mergeProps(api.getItemProps(itemProps), localProps);
  const view = runIfFn.runIfFn(children, itemState);
  const presenceProps = presencePropsContext.usePresencePropsContext();
  const presenceApi = usePresence.usePresence({ ...presenceProps, present: itemState.isOpen });
  return /* @__PURE__ */ jsxRuntime.jsx(accordionItemContext.AccordionItemProvider, { value: itemProps, children: /* @__PURE__ */ jsxRuntime.jsx(presenceContext.PresenceProvider, { value: presenceApi, children: /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref, children: view }) }) });
});
AccordionItem.displayName = "AccordionItem";

exports.AccordionItem = AccordionItem;
