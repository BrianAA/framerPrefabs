'use client';
import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import '../presence/index.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { useAccordionContext } from './accordion-context.mjs';
import { AccordionItemProvider } from './accordion-item-context.mjs';
import { usePresencePropsContext } from '../presence/presence-props-context.mjs';
import { usePresence } from '../presence/use-presence.mjs';
import { PresenceProvider } from '../presence/presence-context.mjs';

const AccordionItem = forwardRef((props, ref) => {
  const [itemProps, { children, ...localProps }] = createSplitProps()(props, [
    "value",
    "disabled"
  ]);
  const api = useAccordionContext();
  const itemState = api.getItemState(itemProps);
  const mergedProps = mergeProps(api.getItemProps(itemProps), localProps);
  const view = runIfFn(children, itemState);
  const presenceProps = usePresencePropsContext();
  const presenceApi = usePresence({ ...presenceProps, present: itemState.isOpen });
  return /* @__PURE__ */ jsx(AccordionItemProvider, { value: itemProps, children: /* @__PURE__ */ jsx(PresenceProvider, { value: presenceApi, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref, children: view }) }) });
});
AccordionItem.displayName = "AccordionItem";

export { AccordionItem };
