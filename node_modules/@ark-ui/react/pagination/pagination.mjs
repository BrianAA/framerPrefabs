'use client';
import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { PaginationProvider } from './pagination-context.mjs';
import { usePagination } from './use-pagination.mjs';

const Pagination = forwardRef((props, ref) => {
  const [paginationProps, { children, ...localProps }] = createSplitProps()(
    props,
    [
      "count",
      "defaultPage",
      "dir",
      "getRootNode",
      "id",
      "ids",
      "onPageChange",
      "page",
      "pageSize",
      "siblingCount",
      "translations",
      "type"
    ]
  );
  const api = usePagination(paginationProps);
  const mergedProps = mergeProps(api.rootProps, localProps);
  const view = runIfFn(children, api);
  return /* @__PURE__ */ jsx(PaginationProvider, { value: api, children: /* @__PURE__ */ jsx(ark.nav, { ...mergedProps, ref, children: view }) });
});
Pagination.displayName = "Pagination";

export { Pagination };
