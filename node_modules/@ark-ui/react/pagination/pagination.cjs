'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const runIfFn = require('../run-if-fn.cjs');
const paginationContext = require('./pagination-context.cjs');
const usePagination = require('./use-pagination.cjs');

const Pagination = react.forwardRef((props, ref) => {
  const [paginationProps, { children, ...localProps }] = createSplitProps.createSplitProps()(
    props,
    [
      "count",
      "defaultPage",
      "dir",
      "getRootNode",
      "id",
      "ids",
      "onPageChange",
      "page",
      "pageSize",
      "siblingCount",
      "translations",
      "type"
    ]
  );
  const api = usePagination.usePagination(paginationProps);
  const mergedProps = react$1.mergeProps(api.rootProps, localProps);
  const view = runIfFn.runIfFn(children, api);
  return /* @__PURE__ */ jsxRuntime.jsx(paginationContext.PaginationProvider, { value: api, children: /* @__PURE__ */ jsxRuntime.jsx(factory.ark.nav, { ...mergedProps, ref, children: view }) });
});
Pagination.displayName = "Pagination";

exports.Pagination = Pagination;
