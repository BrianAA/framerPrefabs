{"version":3,"sources":["../src/carousel.anatomy.ts","../src/carousel.connect.ts","../src/carousel.dom.ts","../src/utils/get-limit.ts","../src/utils/get-alignment.ts","../src/utils/get-slide-groups.ts","../src/utils/get-slide-sizes.ts","../src/utils/get-scroll-snaps.ts","../src/utils/get-slide-in-view.ts","../src/carousel.machine.ts"],"sourcesContent":["import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"carousel\").parts(\n  \"root\",\n  \"viewport\",\n  \"itemGroup\",\n  \"item\",\n  \"nextTrigger\",\n  \"prevTrigger\",\n  \"indicatorGroup\",\n  \"indicator\",\n)\n\nexport const parts = anatomy.build()\n","import { dataAttr, isDom } from \"@zag-js/dom-query\"\nimport type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { parts } from \"./carousel.anatomy\"\nimport { dom } from \"./carousel.dom\"\nimport type { MachineApi, Send, IndicatorProps, ItemProps, State, ItemState } from \"./carousel.types\"\nimport { getSlidesInView } from \"./utils/get-slide-in-view\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): MachineApi<T> {\n  const canScrollNext = state.context.canScrollNext\n  const canScrollPrev = state.context.canScrollPrev\n  const isHorizontal = state.context.isHorizontal\n  const isAutoplay = state.matches(\"autoplay\")\n\n  const activeSnap = state.context.scrollSnaps[state.context.index]\n  const slidesInView = isDom() ? getSlidesInView(state.context)(activeSnap) : []\n\n  function getItemStateState(props: ItemProps): ItemState {\n    const { index } = props\n    return {\n      valueText: `Slide ${index + 1}`,\n      isCurrent: index === state.context.index,\n      isNext: index === state.context.index + 1,\n      isPrevious: index === state.context.index - 1,\n      isInView: slidesInView.includes(index),\n    }\n  }\n\n  return {\n    index: state.context.index,\n    scrollProgress: state.context.scrollProgress,\n    isAutoplay,\n    canScrollNext,\n    canScrollPrev,\n\n    scrollTo(index, jump) {\n      send({ type: \"GOTO\", index, jump })\n    },\n\n    scrollToNext() {\n      send(\"NEXT\")\n    },\n\n    scrollToPrevious() {\n      send(\"PREV\")\n    },\n\n    getItemState: getItemStateState,\n\n    play() {\n      send(\"PLAY\")\n    },\n\n    pause() {\n      send(\"PAUSE\")\n    },\n\n    rootProps: normalize.element({\n      ...parts.root.attrs,\n      id: dom.getRootId(state.context),\n      role: \"region\",\n      \"aria-roledescription\": \"carousel\",\n      \"data-orientation\": state.context.orientation,\n      dir: state.context.dir,\n      \"aria-label\": \"Carousel\",\n      style: {\n        \"--slide-spacing\": state.context.spacing,\n        \"--slide-size\": `calc(100% / ${state.context.slidesPerView} - var(--slide-spacing))`,\n      },\n    }),\n\n    viewportProps: normalize.element({\n      ...parts.viewport.attrs,\n      dir: state.context.dir,\n      id: dom.getViewportId(state.context),\n      \"data-orientation\": state.context.orientation,\n    }),\n\n    itemGroupProps: normalize.element({\n      ...parts.itemGroup.attrs,\n      id: dom.getItemGroupId(state.context),\n      \"data-orientation\": state.context.orientation,\n      dir: state.context.dir,\n      style: {\n        display: \"flex\",\n        flexDirection: isHorizontal ? \"row\" : \"column\",\n        [isHorizontal ? \"height\" : \"width\"]: \"auto\",\n        gap: \"var(--slide-spacing)\",\n        transform: state.context.translateValue,\n        transitionProperty: \"transform\",\n        willChange: \"transform\",\n        transitionTimingFunction: \"cubic-bezier(0.4, 0, 0.2, 1)\",\n        transitionDuration: \"0.3s\",\n      },\n    }),\n\n    getItemProps(props) {\n      const { index } = props\n      const sliderState = getItemStateState(props)\n\n      return normalize.element({\n        ...parts.item.attrs,\n        id: dom.getItemId(state.context, index),\n        dir: state.context.dir,\n        \"data-current\": dataAttr(sliderState.isCurrent),\n        \"data-inview\": dataAttr(sliderState.isInView),\n        role: \"group\",\n        \"aria-roledescription\": \"slide\",\n        \"data-orientation\": state.context.orientation,\n        \"aria-label\": sliderState.valueText,\n        style: {\n          position: \"relative\",\n          flex: \"0 0 var(--slide-size)\",\n          [isHorizontal ? \"minWidth\" : \"minHeight\"]: \"0px\",\n        },\n      })\n    },\n\n    prevTriggerProps: normalize.button({\n      ...parts.prevTrigger.attrs,\n      id: dom.getPrevTriggerId(state.context),\n      type: \"button\",\n      tabIndex: -1,\n      disabled: !canScrollPrev,\n      dir: state.context.dir,\n      \"aria-label\": \"Previous Slide\",\n      \"data-orientation\": state.context.orientation,\n      \"aria-controls\": dom.getItemGroupId(state.context),\n      onClick() {\n        send(\"PREV\")\n      },\n    }),\n\n    nextTriggerProps: normalize.button({\n      ...parts.nextTrigger.attrs,\n      dir: state.context.dir,\n      id: dom.getNextTriggerId(state.context),\n      type: \"button\",\n      tabIndex: -1,\n      \"aria-label\": \"Next Slide\",\n      \"data-orientation\": state.context.orientation,\n      \"aria-controls\": dom.getItemGroupId(state.context),\n      disabled: !canScrollNext,\n      onClick() {\n        send(\"NEXT\")\n      },\n    }),\n\n    indicatorGroupProps: normalize.element({\n      ...parts.indicatorGroup.attrs,\n      dir: state.context.dir,\n      id: dom.getIndicatorGroupId(state.context),\n      \"data-orientation\": state.context.orientation,\n    }),\n\n    getIndicatorProps(props: IndicatorProps) {\n      const { index, readOnly } = props\n      return normalize.button({\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        id: dom.getIndicatorId(state.context, index),\n        type: \"button\",\n        \"data-orientation\": state.context.orientation,\n        \"data-index\": index,\n        \"data-readonly\": dataAttr(readOnly),\n        \"data-current\": dataAttr(index === state.context.index),\n        onClick() {\n          if (readOnly) return\n          send({ type: \"GOTO\", index })\n        },\n      })\n    },\n  }\n}\n","import { createScope, queryAll } from \"@zag-js/dom-query\"\nimport type { MachineContext as Ctx } from \"./carousel.types\"\n\nexport const dom = createScope({\n  getRootId: (ctx: Ctx) => ctx.ids?.root ?? `carousel:${ctx.id}`,\n  getViewportId: (ctx: Ctx) => ctx.ids?.viewport ?? `carousel:${ctx.id}:viewport`,\n  getItemId: (ctx: Ctx, index: number) => ctx.ids?.slide?.(index) ?? `carousel:${ctx.id}:slide:${index}`,\n  getItemGroupId: (ctx: Ctx) => ctx.ids?.slideGroup ?? `carousel:${ctx.id}:slide-group`,\n  getNextTriggerId: (ctx: Ctx) => ctx.ids?.nextSlideTrigger ?? `carousel:${ctx.id}:next-slide-trigger`,\n  getPrevTriggerId: (ctx: Ctx) => ctx.ids?.prevSlideTrigger ?? `carousel:${ctx.id}:prev-slide-trigger`,\n  getIndicatorGroupId: (ctx: Ctx) => ctx.ids?.indicatorGroup ?? `carousel:${ctx.id}:indicator-group`,\n  getIndicatorId: (ctx: Ctx, index: number) => ctx.ids?.indicator?.(index) ?? `carousel:${ctx.id}:indicator:${index}`,\n\n  getRootEl: (ctx: Ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getViewportEl: (ctx: Ctx) => dom.getById(ctx, dom.getViewportId(ctx)),\n  getSlideGroupEl: (ctx: Ctx) => dom.getById(ctx, dom.getItemGroupId(ctx)),\n  getSlideEls: (ctx: Ctx) => queryAll(dom.getSlideGroupEl(ctx), `[data-part=item]`),\n})\n","export function getLimit(min: number, max: number) {\n  const length = Math.abs(min - max)\n\n  function reachedMin(n: number): boolean {\n    return n < min\n  }\n\n  function reachedMax(n: number): boolean {\n    return n > max\n  }\n\n  function reachedAny(n: number): boolean {\n    return reachedMin(n) || reachedMax(n)\n  }\n\n  function constrain(n: number): number {\n    if (!reachedAny(n)) return n\n    return reachedMin(n) ? min : max\n  }\n\n  function removeOffset(n: number): number {\n    if (!length) return n\n    return n - length * Math.ceil((n - max) / length)\n  }\n\n  return {\n    length,\n    max,\n    min,\n    constrain,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset,\n  }\n}\n","import { isNumber } from \"@zag-js/utils\"\n\nexport type AlignmentOptionType = \"start\" | \"center\" | \"end\" | number\n\nexport const getAlignment = (align: AlignmentOptionType, containerSize: number) => {\n  const predefined = { start, center, end }\n\n  function start(): number {\n    return 0\n  }\n\n  function center(n: number): number {\n    return end(n) / 2\n  }\n\n  function end(n: number): number {\n    return containerSize - n\n  }\n\n  function percent(): number {\n    return containerSize * Number(align)\n  }\n\n  return (n: number) => {\n    if (isNumber(align)) return percent()\n    return predefined[align](n)\n  }\n}\n","import { isNumber } from \"@zag-js/utils\"\nimport type { MachineContext } from \"../carousel.types\"\n\nexport function getSlidesToScroll(\n  containerSize: number,\n  slideSizesWithGaps: number[],\n  slidesPerView: MachineContext[\"slidesPerView\"],\n) {\n  function byNumber<T>(array: T[], groupSize: number): T[][] {\n    return Array.from(array.keys())\n      .filter((i) => i % groupSize === 0)\n      .map((i) => array.slice(i, i + groupSize))\n  }\n\n  function bySize<T>(array: T[]): T[][] {\n    return Array.from(array.keys())\n      .reduce((groups: number[], i) => {\n        const chunk = slideSizesWithGaps.slice(groups.at(-1), i + 1)\n        const chunkSize = chunk.reduce((a, s) => a + s, 0)\n        return !i || chunkSize > containerSize ? groups.concat(i) : groups\n      }, [])\n      .map((start, i, groups) => array.slice(start, groups[i + 1]))\n  }\n\n  return function groupSlides<T>(array: T[]): T[][] {\n    return isNumber(slidesPerView) ? byNumber(array, slidesPerView) : bySize(array)\n  }\n}\n","import type { MachineContext } from \"../carousel.types\"\n\nexport type SlideSizesType = {\n  slideSizes: number[]\n  slideSizesWithGaps: number[]\n}\n\nexport function getSlideSizes(ctx: MachineContext): SlideSizesType {\n  const startGap = measureStartGap()\n\n  function measureStartGap(): number {\n    if (!ctx.containerRect) return 0\n    const slideRect = ctx.slideRects[0]\n    return Math.abs(ctx.containerRect[ctx.startEdge] - slideRect[ctx.startEdge])\n  }\n\n  function measureWithGaps(): number[] {\n    return ctx.slideRects.map((rect, index, rects) => {\n      const isFirst = !index\n      if (isFirst) return Math.abs(slideSizes[index] + startGap)\n\n      const isLast = index === rects.length - 1\n      if (isLast) return Math.abs(slideSizes[index])\n\n      return Math.abs(rects[index + 1][ctx.startEdge] - rect[ctx.startEdge])\n    })\n  }\n\n  const slideSizes = ctx.slideRects.map((slideRect) => {\n    return ctx.isVertical ? slideRect.height : slideRect.width\n  })\n  const slideSizesWithGaps = measureWithGaps()\n\n  return {\n    slideSizes,\n    slideSizesWithGaps,\n  }\n}\n","import type { MachineContext } from \"../carousel.types\"\nimport { getAlignment } from \"./get-alignment\"\nimport { getLimit } from \"./get-limit\"\nimport { getSlidesToScroll } from \"./get-slide-groups\"\nimport { getSlideSizes } from \"./get-slide-sizes\"\n\nconst arrayLast = <T>(array: T[]): T => array[arrayLastIndex(array)]\nconst arrayLastIndex = <T>(array: T[]): number => Math.max(0, array.length - 1)\n\nexport function getScrollSnaps(ctx: MachineContext) {\n  const { slideSizes, slideSizesWithGaps } = getSlideSizes(ctx)\n\n  const groupSlides = getSlidesToScroll(ctx.containerSize!, slideSizesWithGaps, ctx.slidesPerView)\n\n  function measureSizes(): number[] {\n    return groupSlides(ctx.slideRects)\n      .map((rects) => arrayLast(rects)[ctx.endEdge] - rects[0][ctx.startEdge])\n      .map(Math.abs)\n  }\n\n  function measureUnaligned(): number[] {\n    return ctx.slideRects\n      .map((slideRect) => ctx.containerRect![ctx.startEdge] - slideRect[ctx.startEdge])\n      .map((snap) => -Math.abs(snap))\n  }\n\n  function measureAligned(): number[] {\n    const measureFn = getAlignment(ctx.align, ctx.containerSize!)\n    const alignments = measureSizes().map(measureFn)\n\n    return groupSlides(snaps)\n      .map((snap) => snap[0])\n      .map((snap, index) => snap + alignments[index])\n  }\n\n  const snaps = measureUnaligned()\n  const snapsAligned = measureAligned()\n\n  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps)\n\n  const scrollLimit = getLimit(snaps[snaps.length - 1], snaps[0])\n  const scrollProgress = (snapsAligned[ctx.index] - scrollLimit.max) / -scrollLimit.length\n\n  return {\n    snaps,\n    snapsAligned,\n    slideSizes,\n    slideSizesWithGaps,\n    contentSize,\n    scrollLimit,\n    scrollProgress: Math.abs(scrollProgress),\n  }\n}\n","import type { MachineContext } from \"../carousel.types\"\nimport { getLimit } from \"./get-limit\"\nimport { getScrollSnaps } from \"./get-scroll-snaps\"\n\ntype Bound = {\n  start: number\n  end: number\n  index: number\n}\n\nconst slideThreshold = 0\n\nexport function getSlidesInView(ctx: MachineContext) {\n  const roundingSafety = 0.5\n  const slideOffsets = [0]\n\n  const { snaps, slideSizes, scrollLimit } = getScrollSnaps(ctx)\n\n  const slideThresholds = slideSizes.map((slideSize) => {\n    const thresholdLimit = getLimit(roundingSafety, slideSize - roundingSafety)\n    return thresholdLimit.constrain(slideSize * slideThreshold)\n  })\n\n  const slideBounds = slideOffsets.reduce((acc: Bound[], offset) => {\n    const bounds = snaps.map((snap, index) => ({\n      start: snap - slideSizes[index] + slideThresholds[index] + offset,\n      end: snap + ctx.containerSize - slideThresholds[index] + offset,\n      index,\n    }))\n    return acc.concat(bounds)\n  }, [])\n\n  return (location: number) => {\n    const loc = scrollLimit.constrain(location)\n    return slideBounds.reduce((list: number[], bound) => {\n      const { index, start, end } = bound\n      const inList = list.includes(index)\n      const inView = start < loc && end > loc\n      return !inList && inView ? list.concat([index]) : list\n    }, [])\n  }\n}\n","import { createMachine, ref } from \"@zag-js/core\"\nimport { compact, isEqual, nextIndex, prevIndex } from \"@zag-js/utils\"\nimport { dom } from \"./carousel.dom\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./carousel.types\"\nimport { getScrollSnaps } from \"./utils/get-scroll-snaps\"\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      id: \"carousel\",\n      initial: \"idle\",\n      context: {\n        index: 0,\n        orientation: \"horizontal\",\n        align: \"start\",\n        loop: false,\n        slidesPerView: 1,\n        spacing: \"0px\",\n        ...ctx,\n        scrollSnaps: [],\n        scrollProgress: 0,\n        containerSize: 0,\n        slideRects: [],\n      },\n\n      watch: {\n        index: [\"setScrollSnaps\"],\n      },\n\n      on: {\n        NEXT: {\n          actions: [\"scrollToNext\"],\n        },\n        PREV: {\n          actions: [\"scrollToPrev\"],\n        },\n        GOTO: {\n          actions: [\"scrollTo\"],\n        },\n        MEASURE_DOM: {\n          actions: [\"measureElements\", \"setScrollSnaps\"],\n        },\n        PLAY: \"autoplay\",\n      },\n\n      states: {\n        idle: {\n          on: {\n            POINTER_DOWN: \"dragging\",\n          },\n        },\n        autoplay: {\n          activities: [\"trackDocumentVisibility\"],\n          every: {\n            2000: [\"scrollToNext\"],\n          },\n          on: {\n            PAUSE: \"idle\",\n          },\n        },\n        dragging: {\n          on: {\n            POINTER_UP: \"idle\",\n            POINTER_MOVE: {\n              actions: [\"setScrollSnaps\"],\n            },\n          },\n        },\n      },\n      activities: [\"trackContainerResize\", \"trackSlideMutation\"],\n      entry: [\"measureElements\", \"setScrollSnaps\"],\n      computed: {\n        isRtl: (ctx) => ctx.dir === \"rtl\",\n        isHorizontal: (ctx) => ctx.orientation === \"horizontal\",\n        isVertical: (ctx) => ctx.orientation === \"vertical\",\n        canScrollNext: (ctx) => ctx.loop || ctx.index < ctx.scrollSnaps.length - 1,\n        canScrollPrev: (ctx) => ctx.loop || ctx.index > 0,\n        startEdge(ctx) {\n          if (ctx.isVertical) return \"top\"\n          return ctx.isRtl ? \"right\" : \"left\"\n        },\n        endEdge(ctx) {\n          if (ctx.isVertical) return \"bottom\"\n          return ctx.isRtl ? \"left\" : \"right\"\n        },\n        translateValue: (ctx) => {\n          const scrollSnap = ctx.scrollSnaps[ctx.index]\n          return ctx.isHorizontal ? `translate3d(${scrollSnap}px, 0, 0)` : `translate3d(0, ${scrollSnap}px, 0)`\n        },\n      },\n    },\n    {\n      activities: {\n        trackSlideMutation(ctx, _evt, { send }) {\n          const slideGroupEl = dom.getSlideGroupEl(ctx)\n          if (!slideGroupEl) return\n          const win = dom.getWin(ctx)\n          const observer = new win.MutationObserver(() => {\n            send({ type: \"MEASURE_DOM\", src: \"mutation\" })\n          })\n          observer.observe(slideGroupEl, { childList: true })\n          return () => {\n            observer.disconnect()\n          }\n        },\n        trackContainerResize(ctx, _evt, { send }) {\n          const slideGroupEl = dom.getSlideGroupEl(ctx)\n          if (!slideGroupEl) return\n          const win = dom.getWin(ctx)\n          const observer = new win.ResizeObserver((entries) => {\n            entries.forEach((entry) => {\n              if (entry.target === slideGroupEl) {\n                send({ type: \"MEASURE_DOM\", src: \"resize\" })\n              }\n            })\n          })\n          observer.observe(slideGroupEl)\n          return () => {\n            observer.disconnect()\n          }\n        },\n        trackDocumentVisibility(ctx, _evt, { send }) {\n          const doc = dom.getDoc(ctx)\n          const onVisibilityChange = () => {\n            if (doc.visibilityState !== \"visible\") {\n              send({ type: \"PAUSE\", src: \"document-hidden\" })\n            }\n          }\n          doc.addEventListener(\"visibilitychange\", onVisibilityChange)\n          return () => {\n            doc.removeEventListener(\"visibilitychange\", onVisibilityChange)\n          }\n        },\n      },\n      guards: {\n        loop: (ctx) => ctx.loop,\n        isLastSlide: (ctx) => ctx.index === ctx.slideRects.length - 1,\n        isFirstSlide: (ctx) => ctx.index === 0,\n      },\n      actions: {\n        scrollToNext(ctx) {\n          const index = nextIndex(ctx.slideRects, ctx.index)\n          set.index(ctx, index)\n        },\n        scrollToPrev(ctx) {\n          const index = prevIndex(ctx.slideRects, ctx.index)\n          set.index(ctx, index)\n        },\n        setScrollSnaps(ctx) {\n          const { snapsAligned, scrollProgress } = getScrollSnaps(ctx)\n          ctx.scrollSnaps = snapsAligned\n          ctx.scrollProgress = scrollProgress\n        },\n        scrollTo(ctx, evt) {\n          const index = Math.max(0, Math.min(evt.index, ctx.slideRects.length - 1))\n          set.index(ctx, index)\n        },\n        measureElements,\n      },\n    },\n  )\n}\n\nconst measureElements = (ctx: MachineContext) => {\n  const slideGroupEl = dom.getSlideGroupEl(ctx)\n  if (!slideGroupEl) return\n  ctx.containerRect = ref(slideGroupEl.getBoundingClientRect())\n  ctx.containerSize = ctx.isHorizontal ? ctx.containerRect.width : ctx.containerRect.height\n  ctx.slideRects = ref(dom.getSlideEls(ctx).map((slide) => slide.getBoundingClientRect()))\n}\n\nconst invoke = {\n  change: (ctx: MachineContext) => {\n    ctx.onIndexChange?.({ index: ctx.index })\n  },\n}\n\nconst set = {\n  index: (ctx: MachineContext, index: number) => {\n    if (isEqual(ctx.index, index)) return\n    ctx.index = index\n    invoke.change(ctx)\n  },\n}\n"],"mappings":";AAAA,SAAS,qBAAqB;AAEvB,IAAM,UAAU,cAAc,UAAU,EAAE;AAAA,EAC/C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEO,IAAM,QAAQ,QAAQ,MAAM;;;ACbnC,SAAS,UAAU,aAAa;;;ACAhC,SAAS,aAAa,gBAAgB;AAG/B,IAAM,MAAM,YAAY;AAAA,EAC7B,WAAW,CAAC,QAAa,IAAI,KAAK,QAAQ,YAAY,IAAI,EAAE;AAAA,EAC5D,eAAe,CAAC,QAAa,IAAI,KAAK,YAAY,YAAY,IAAI,EAAE;AAAA,EACpE,WAAW,CAAC,KAAU,UAAkB,IAAI,KAAK,QAAQ,KAAK,KAAK,YAAY,IAAI,EAAE,UAAU,KAAK;AAAA,EACpG,gBAAgB,CAAC,QAAa,IAAI,KAAK,cAAc,YAAY,IAAI,EAAE;AAAA,EACvE,kBAAkB,CAAC,QAAa,IAAI,KAAK,oBAAoB,YAAY,IAAI,EAAE;AAAA,EAC/E,kBAAkB,CAAC,QAAa,IAAI,KAAK,oBAAoB,YAAY,IAAI,EAAE;AAAA,EAC/E,qBAAqB,CAAC,QAAa,IAAI,KAAK,kBAAkB,YAAY,IAAI,EAAE;AAAA,EAChF,gBAAgB,CAAC,KAAU,UAAkB,IAAI,KAAK,YAAY,KAAK,KAAK,YAAY,IAAI,EAAE,cAAc,KAAK;AAAA,EAEjH,WAAW,CAAC,QAAa,IAAI,QAAQ,KAAK,IAAI,UAAU,GAAG,CAAC;AAAA,EAC5D,eAAe,CAAC,QAAa,IAAI,QAAQ,KAAK,IAAI,cAAc,GAAG,CAAC;AAAA,EACpE,iBAAiB,CAAC,QAAa,IAAI,QAAQ,KAAK,IAAI,eAAe,GAAG,CAAC;AAAA,EACvE,aAAa,CAAC,QAAa,SAAS,IAAI,gBAAgB,GAAG,GAAG,kBAAkB;AAClF,CAAC;;;ACjBM,SAAS,SAAS,KAAa,KAAa;AACjD,QAAM,SAAS,KAAK,IAAI,MAAM,GAAG;AAEjC,WAAS,WAAW,GAAoB;AACtC,WAAO,IAAI;AAAA,EACb;AAEA,WAAS,WAAW,GAAoB;AACtC,WAAO,IAAI;AAAA,EACb;AAEA,WAAS,WAAW,GAAoB;AACtC,WAAO,WAAW,CAAC,KAAK,WAAW,CAAC;AAAA,EACtC;AAEA,WAAS,UAAU,GAAmB;AACpC,QAAI,CAAC,WAAW,CAAC;AAAG,aAAO;AAC3B,WAAO,WAAW,CAAC,IAAI,MAAM;AAAA,EAC/B;AAEA,WAAS,aAAa,GAAmB;AACvC,QAAI,CAAC;AAAQ,aAAO;AACpB,WAAO,IAAI,SAAS,KAAK,MAAM,IAAI,OAAO,MAAM;AAAA,EAClD;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;;;ACnCA,SAAS,gBAAgB;AAIlB,IAAM,eAAe,CAAC,OAA4B,kBAA0B;AACjF,QAAM,aAAa,EAAE,OAAO,QAAQ,IAAI;AAExC,WAAS,QAAgB;AACvB,WAAO;AAAA,EACT;AAEA,WAAS,OAAO,GAAmB;AACjC,WAAO,IAAI,CAAC,IAAI;AAAA,EAClB;AAEA,WAAS,IAAI,GAAmB;AAC9B,WAAO,gBAAgB;AAAA,EACzB;AAEA,WAAS,UAAkB;AACzB,WAAO,gBAAgB,OAAO,KAAK;AAAA,EACrC;AAEA,SAAO,CAAC,MAAc;AACpB,QAAI,SAAS,KAAK;AAAG,aAAO,QAAQ;AACpC,WAAO,WAAW,KAAK,EAAE,CAAC;AAAA,EAC5B;AACF;;;AC3BA,SAAS,YAAAA,iBAAgB;AAGlB,SAAS,kBACd,eACA,oBACA,eACA;AACA,WAAS,SAAY,OAAY,WAA0B;AACzD,WAAO,MAAM,KAAK,MAAM,KAAK,CAAC,EAC3B,OAAO,CAAC,MAAM,IAAI,cAAc,CAAC,EACjC,IAAI,CAAC,MAAM,MAAM,MAAM,GAAG,IAAI,SAAS,CAAC;AAAA,EAC7C;AAEA,WAAS,OAAU,OAAmB;AACpC,WAAO,MAAM,KAAK,MAAM,KAAK,CAAC,EAC3B,OAAO,CAAC,QAAkB,MAAM;AAC/B,YAAM,QAAQ,mBAAmB,MAAM,OAAO,GAAG,EAAE,GAAG,IAAI,CAAC;AAC3D,YAAM,YAAY,MAAM,OAAO,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC;AACjD,aAAO,CAAC,KAAK,YAAY,gBAAgB,OAAO,OAAO,CAAC,IAAI;AAAA,IAC9D,GAAG,CAAC,CAAC,EACJ,IAAI,CAAC,OAAO,GAAG,WAAW,MAAM,MAAM,OAAO,OAAO,IAAI,CAAC,CAAC,CAAC;AAAA,EAChE;AAEA,SAAO,SAAS,YAAe,OAAmB;AAChD,WAAOA,UAAS,aAAa,IAAI,SAAS,OAAO,aAAa,IAAI,OAAO,KAAK;AAAA,EAChF;AACF;;;ACpBO,SAAS,cAAc,KAAqC;AACjE,QAAM,WAAW,gBAAgB;AAEjC,WAAS,kBAA0B;AACjC,QAAI,CAAC,IAAI;AAAe,aAAO;AAC/B,UAAM,YAAY,IAAI,WAAW,CAAC;AAClC,WAAO,KAAK,IAAI,IAAI,cAAc,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,CAAC;AAAA,EAC7E;AAEA,WAAS,kBAA4B;AACnC,WAAO,IAAI,WAAW,IAAI,CAAC,MAAM,OAAO,UAAU;AAChD,YAAM,UAAU,CAAC;AACjB,UAAI;AAAS,eAAO,KAAK,IAAI,WAAW,KAAK,IAAI,QAAQ;AAEzD,YAAM,SAAS,UAAU,MAAM,SAAS;AACxC,UAAI;AAAQ,eAAO,KAAK,IAAI,WAAW,KAAK,CAAC;AAE7C,aAAO,KAAK,IAAI,MAAM,QAAQ,CAAC,EAAE,IAAI,SAAS,IAAI,KAAK,IAAI,SAAS,CAAC;AAAA,IACvE,CAAC;AAAA,EACH;AAEA,QAAM,aAAa,IAAI,WAAW,IAAI,CAAC,cAAc;AACnD,WAAO,IAAI,aAAa,UAAU,SAAS,UAAU;AAAA,EACvD,CAAC;AACD,QAAM,qBAAqB,gBAAgB;AAE3C,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;;;AC/BA,IAAM,YAAY,CAAI,UAAkB,MAAM,eAAe,KAAK,CAAC;AACnE,IAAM,iBAAiB,CAAI,UAAuB,KAAK,IAAI,GAAG,MAAM,SAAS,CAAC;AAEvE,SAAS,eAAe,KAAqB;AAClD,QAAM,EAAE,YAAY,mBAAmB,IAAI,cAAc,GAAG;AAE5D,QAAM,cAAc,kBAAkB,IAAI,eAAgB,oBAAoB,IAAI,aAAa;AAE/F,WAAS,eAAyB;AAChC,WAAO,YAAY,IAAI,UAAU,EAC9B,IAAI,CAAC,UAAU,UAAU,KAAK,EAAE,IAAI,OAAO,IAAI,MAAM,CAAC,EAAE,IAAI,SAAS,CAAC,EACtE,IAAI,KAAK,GAAG;AAAA,EACjB;AAEA,WAAS,mBAA6B;AACpC,WAAO,IAAI,WACR,IAAI,CAAC,cAAc,IAAI,cAAe,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,CAAC,EAC/E,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC;AAAA,EAClC;AAEA,WAAS,iBAA2B;AAClC,UAAM,YAAY,aAAa,IAAI,OAAO,IAAI,aAAc;AAC5D,UAAM,aAAa,aAAa,EAAE,IAAI,SAAS;AAE/C,WAAO,YAAY,KAAK,EACrB,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC,EACrB,IAAI,CAAC,MAAM,UAAU,OAAO,WAAW,KAAK,CAAC;AAAA,EAClD;AAEA,QAAM,QAAQ,iBAAiB;AAC/B,QAAM,eAAe,eAAe;AAEpC,QAAM,cAAc,CAAC,UAAU,KAAK,IAAI,UAAU,kBAAkB;AAEpE,QAAM,cAAc,SAAS,MAAM,MAAM,SAAS,CAAC,GAAG,MAAM,CAAC,CAAC;AAC9D,QAAM,kBAAkB,aAAa,IAAI,KAAK,IAAI,YAAY,OAAO,CAAC,YAAY;AAElF,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,gBAAgB,KAAK,IAAI,cAAc;AAAA,EACzC;AACF;;;AC1CA,IAAM,iBAAiB;AAEhB,SAAS,gBAAgB,KAAqB;AACnD,QAAM,iBAAiB;AACvB,QAAM,eAAe,CAAC,CAAC;AAEvB,QAAM,EAAE,OAAO,YAAY,YAAY,IAAI,eAAe,GAAG;AAE7D,QAAM,kBAAkB,WAAW,IAAI,CAAC,cAAc;AACpD,UAAM,iBAAiB,SAAS,gBAAgB,YAAY,cAAc;AAC1E,WAAO,eAAe,UAAU,YAAY,cAAc;AAAA,EAC5D,CAAC;AAED,QAAM,cAAc,aAAa,OAAO,CAAC,KAAc,WAAW;AAChE,UAAM,SAAS,MAAM,IAAI,CAAC,MAAM,WAAW;AAAA,MACzC,OAAO,OAAO,WAAW,KAAK,IAAI,gBAAgB,KAAK,IAAI;AAAA,MAC3D,KAAK,OAAO,IAAI,gBAAgB,gBAAgB,KAAK,IAAI;AAAA,MACzD;AAAA,IACF,EAAE;AACF,WAAO,IAAI,OAAO,MAAM;AAAA,EAC1B,GAAG,CAAC,CAAC;AAEL,SAAO,CAAC,aAAqB;AAC3B,UAAM,MAAM,YAAY,UAAU,QAAQ;AAC1C,WAAO,YAAY,OAAO,CAAC,MAAgB,UAAU;AACnD,YAAM,EAAE,OAAO,OAAO,IAAI,IAAI;AAC9B,YAAM,SAAS,KAAK,SAAS,KAAK;AAClC,YAAM,SAAS,QAAQ,OAAO,MAAM;AACpC,aAAO,CAAC,UAAU,SAAS,KAAK,OAAO,CAAC,KAAK,CAAC,IAAI;AAAA,IACpD,GAAG,CAAC,CAAC;AAAA,EACP;AACF;;;APlCO,SAAS,QAA6B,OAAc,MAAY,WAA6C;AAClH,QAAM,gBAAgB,MAAM,QAAQ;AACpC,QAAM,gBAAgB,MAAM,QAAQ;AACpC,QAAM,eAAe,MAAM,QAAQ;AACnC,QAAM,aAAa,MAAM,QAAQ,UAAU;AAE3C,QAAM,aAAa,MAAM,QAAQ,YAAY,MAAM,QAAQ,KAAK;AAChE,QAAM,eAAe,MAAM,IAAI,gBAAgB,MAAM,OAAO,EAAE,UAAU,IAAI,CAAC;AAE7E,WAAS,kBAAkB,OAA6B;AACtD,UAAM,EAAE,MAAM,IAAI;AAClB,WAAO;AAAA,MACL,WAAW,SAAS,QAAQ,CAAC;AAAA,MAC7B,WAAW,UAAU,MAAM,QAAQ;AAAA,MACnC,QAAQ,UAAU,MAAM,QAAQ,QAAQ;AAAA,MACxC,YAAY,UAAU,MAAM,QAAQ,QAAQ;AAAA,MAC5C,UAAU,aAAa,SAAS,KAAK;AAAA,IACvC;AAAA,EACF;AAEA,SAAO;AAAA,IACL,OAAO,MAAM,QAAQ;AAAA,IACrB,gBAAgB,MAAM,QAAQ;AAAA,IAC9B;AAAA,IACA;AAAA,IACA;AAAA,IAEA,SAAS,OAAO,MAAM;AACpB,WAAK,EAAE,MAAM,QAAQ,OAAO,KAAK,CAAC;AAAA,IACpC;AAAA,IAEA,eAAe;AACb,WAAK,MAAM;AAAA,IACb;AAAA,IAEA,mBAAmB;AACjB,WAAK,MAAM;AAAA,IACb;AAAA,IAEA,cAAc;AAAA,IAEd,OAAO;AACL,WAAK,MAAM;AAAA,IACb;AAAA,IAEA,QAAQ;AACN,WAAK,OAAO;AAAA,IACd;AAAA,IAEA,WAAW,UAAU,QAAQ;AAAA,MAC3B,GAAG,MAAM,KAAK;AAAA,MACd,IAAI,IAAI,UAAU,MAAM,OAAO;AAAA,MAC/B,MAAM;AAAA,MACN,wBAAwB;AAAA,MACxB,oBAAoB,MAAM,QAAQ;AAAA,MAClC,KAAK,MAAM,QAAQ;AAAA,MACnB,cAAc;AAAA,MACd,OAAO;AAAA,QACL,mBAAmB,MAAM,QAAQ;AAAA,QACjC,gBAAgB,eAAe,MAAM,QAAQ,aAAa;AAAA,MAC5D;AAAA,IACF,CAAC;AAAA,IAED,eAAe,UAAU,QAAQ;AAAA,MAC/B,GAAG,MAAM,SAAS;AAAA,MAClB,KAAK,MAAM,QAAQ;AAAA,MACnB,IAAI,IAAI,cAAc,MAAM,OAAO;AAAA,MACnC,oBAAoB,MAAM,QAAQ;AAAA,IACpC,CAAC;AAAA,IAED,gBAAgB,UAAU,QAAQ;AAAA,MAChC,GAAG,MAAM,UAAU;AAAA,MACnB,IAAI,IAAI,eAAe,MAAM,OAAO;AAAA,MACpC,oBAAoB,MAAM,QAAQ;AAAA,MAClC,KAAK,MAAM,QAAQ;AAAA,MACnB,OAAO;AAAA,QACL,SAAS;AAAA,QACT,eAAe,eAAe,QAAQ;AAAA,QACtC,CAAC,eAAe,WAAW,OAAO,GAAG;AAAA,QACrC,KAAK;AAAA,QACL,WAAW,MAAM,QAAQ;AAAA,QACzB,oBAAoB;AAAA,QACpB,YAAY;AAAA,QACZ,0BAA0B;AAAA,QAC1B,oBAAoB;AAAA,MACtB;AAAA,IACF,CAAC;AAAA,IAED,aAAa,OAAO;AAClB,YAAM,EAAE,MAAM,IAAI;AAClB,YAAM,cAAc,kBAAkB,KAAK;AAE3C,aAAO,UAAU,QAAQ;AAAA,QACvB,GAAG,MAAM,KAAK;AAAA,QACd,IAAI,IAAI,UAAU,MAAM,SAAS,KAAK;AAAA,QACtC,KAAK,MAAM,QAAQ;AAAA,QACnB,gBAAgB,SAAS,YAAY,SAAS;AAAA,QAC9C,eAAe,SAAS,YAAY,QAAQ;AAAA,QAC5C,MAAM;AAAA,QACN,wBAAwB;AAAA,QACxB,oBAAoB,MAAM,QAAQ;AAAA,QAClC,cAAc,YAAY;AAAA,QAC1B,OAAO;AAAA,UACL,UAAU;AAAA,UACV,MAAM;AAAA,UACN,CAAC,eAAe,aAAa,WAAW,GAAG;AAAA,QAC7C;AAAA,MACF,CAAC;AAAA,IACH;AAAA,IAEA,kBAAkB,UAAU,OAAO;AAAA,MACjC,GAAG,MAAM,YAAY;AAAA,MACrB,IAAI,IAAI,iBAAiB,MAAM,OAAO;AAAA,MACtC,MAAM;AAAA,MACN,UAAU;AAAA,MACV,UAAU,CAAC;AAAA,MACX,KAAK,MAAM,QAAQ;AAAA,MACnB,cAAc;AAAA,MACd,oBAAoB,MAAM,QAAQ;AAAA,MAClC,iBAAiB,IAAI,eAAe,MAAM,OAAO;AAAA,MACjD,UAAU;AACR,aAAK,MAAM;AAAA,MACb;AAAA,IACF,CAAC;AAAA,IAED,kBAAkB,UAAU,OAAO;AAAA,MACjC,GAAG,MAAM,YAAY;AAAA,MACrB,KAAK,MAAM,QAAQ;AAAA,MACnB,IAAI,IAAI,iBAAiB,MAAM,OAAO;AAAA,MACtC,MAAM;AAAA,MACN,UAAU;AAAA,MACV,cAAc;AAAA,MACd,oBAAoB,MAAM,QAAQ;AAAA,MAClC,iBAAiB,IAAI,eAAe,MAAM,OAAO;AAAA,MACjD,UAAU,CAAC;AAAA,MACX,UAAU;AACR,aAAK,MAAM;AAAA,MACb;AAAA,IACF,CAAC;AAAA,IAED,qBAAqB,UAAU,QAAQ;AAAA,MACrC,GAAG,MAAM,eAAe;AAAA,MACxB,KAAK,MAAM,QAAQ;AAAA,MACnB,IAAI,IAAI,oBAAoB,MAAM,OAAO;AAAA,MACzC,oBAAoB,MAAM,QAAQ;AAAA,IACpC,CAAC;AAAA,IAED,kBAAkB,OAAuB;AACvC,YAAM,EAAE,OAAO,SAAS,IAAI;AAC5B,aAAO,UAAU,OAAO;AAAA,QACtB,GAAG,MAAM,UAAU;AAAA,QACnB,KAAK,MAAM,QAAQ;AAAA,QACnB,IAAI,IAAI,eAAe,MAAM,SAAS,KAAK;AAAA,QAC3C,MAAM;AAAA,QACN,oBAAoB,MAAM,QAAQ;AAAA,QAClC,cAAc;AAAA,QACd,iBAAiB,SAAS,QAAQ;AAAA,QAClC,gBAAgB,SAAS,UAAU,MAAM,QAAQ,KAAK;AAAA,QACtD,UAAU;AACR,cAAI;AAAU;AACd,eAAK,EAAE,MAAM,QAAQ,MAAM,CAAC;AAAA,QAC9B;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AACF;;;AQ5KA,SAAS,eAAe,WAAW;AACnC,SAAS,SAAS,SAAS,WAAW,iBAAiB;AAKhD,SAAS,QAAQ,aAAiC;AACvD,QAAM,MAAM,QAAQ,WAAW;AAC/B,SAAO;AAAA,IACL;AAAA,MACE,IAAI;AAAA,MACJ,SAAS;AAAA,MACT,SAAS;AAAA,QACP,OAAO;AAAA,QACP,aAAa;AAAA,QACb,OAAO;AAAA,QACP,MAAM;AAAA,QACN,eAAe;AAAA,QACf,SAAS;AAAA,QACT,GAAG;AAAA,QACH,aAAa,CAAC;AAAA,QACd,gBAAgB;AAAA,QAChB,eAAe;AAAA,QACf,YAAY,CAAC;AAAA,MACf;AAAA,MAEA,OAAO;AAAA,QACL,OAAO,CAAC,gBAAgB;AAAA,MAC1B;AAAA,MAEA,IAAI;AAAA,QACF,MAAM;AAAA,UACJ,SAAS,CAAC,cAAc;AAAA,QAC1B;AAAA,QACA,MAAM;AAAA,UACJ,SAAS,CAAC,cAAc;AAAA,QAC1B;AAAA,QACA,MAAM;AAAA,UACJ,SAAS,CAAC,UAAU;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,SAAS,CAAC,mBAAmB,gBAAgB;AAAA,QAC/C;AAAA,QACA,MAAM;AAAA,MACR;AAAA,MAEA,QAAQ;AAAA,QACN,MAAM;AAAA,UACJ,IAAI;AAAA,YACF,cAAc;AAAA,UAChB;AAAA,QACF;AAAA,QACA,UAAU;AAAA,UACR,YAAY,CAAC,yBAAyB;AAAA,UACtC,OAAO;AAAA,YACL,KAAM,CAAC,cAAc;AAAA,UACvB;AAAA,UACA,IAAI;AAAA,YACF,OAAO;AAAA,UACT;AAAA,QACF;AAAA,QACA,UAAU;AAAA,UACR,IAAI;AAAA,YACF,YAAY;AAAA,YACZ,cAAc;AAAA,cACZ,SAAS,CAAC,gBAAgB;AAAA,YAC5B;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,MACA,YAAY,CAAC,wBAAwB,oBAAoB;AAAA,MACzD,OAAO,CAAC,mBAAmB,gBAAgB;AAAA,MAC3C,UAAU;AAAA,QACR,OAAO,CAACC,SAAQA,KAAI,QAAQ;AAAA,QAC5B,cAAc,CAACA,SAAQA,KAAI,gBAAgB;AAAA,QAC3C,YAAY,CAACA,SAAQA,KAAI,gBAAgB;AAAA,QACzC,eAAe,CAACA,SAAQA,KAAI,QAAQA,KAAI,QAAQA,KAAI,YAAY,SAAS;AAAA,QACzE,eAAe,CAACA,SAAQA,KAAI,QAAQA,KAAI,QAAQ;AAAA,QAChD,UAAUA,MAAK;AACb,cAAIA,KAAI;AAAY,mBAAO;AAC3B,iBAAOA,KAAI,QAAQ,UAAU;AAAA,QAC/B;AAAA,QACA,QAAQA,MAAK;AACX,cAAIA,KAAI;AAAY,mBAAO;AAC3B,iBAAOA,KAAI,QAAQ,SAAS;AAAA,QAC9B;AAAA,QACA,gBAAgB,CAACA,SAAQ;AACvB,gBAAM,aAAaA,KAAI,YAAYA,KAAI,KAAK;AAC5C,iBAAOA,KAAI,eAAe,eAAe,UAAU,cAAc,kBAAkB,UAAU;AAAA,QAC/F;AAAA,MACF;AAAA,IACF;AAAA,IACA;AAAA,MACE,YAAY;AAAA,QACV,mBAAmBA,MAAK,MAAM,EAAE,KAAK,GAAG;AACtC,gBAAM,eAAe,IAAI,gBAAgBA,IAAG;AAC5C,cAAI,CAAC;AAAc;AACnB,gBAAM,MAAM,IAAI,OAAOA,IAAG;AAC1B,gBAAM,WAAW,IAAI,IAAI,iBAAiB,MAAM;AAC9C,iBAAK,EAAE,MAAM,eAAe,KAAK,WAAW,CAAC;AAAA,UAC/C,CAAC;AACD,mBAAS,QAAQ,cAAc,EAAE,WAAW,KAAK,CAAC;AAClD,iBAAO,MAAM;AACX,qBAAS,WAAW;AAAA,UACtB;AAAA,QACF;AAAA,QACA,qBAAqBA,MAAK,MAAM,EAAE,KAAK,GAAG;AACxC,gBAAM,eAAe,IAAI,gBAAgBA,IAAG;AAC5C,cAAI,CAAC;AAAc;AACnB,gBAAM,MAAM,IAAI,OAAOA,IAAG;AAC1B,gBAAM,WAAW,IAAI,IAAI,eAAe,CAAC,YAAY;AACnD,oBAAQ,QAAQ,CAAC,UAAU;AACzB,kBAAI,MAAM,WAAW,cAAc;AACjC,qBAAK,EAAE,MAAM,eAAe,KAAK,SAAS,CAAC;AAAA,cAC7C;AAAA,YACF,CAAC;AAAA,UACH,CAAC;AACD,mBAAS,QAAQ,YAAY;AAC7B,iBAAO,MAAM;AACX,qBAAS,WAAW;AAAA,UACtB;AAAA,QACF;AAAA,QACA,wBAAwBA,MAAK,MAAM,EAAE,KAAK,GAAG;AAC3C,gBAAM,MAAM,IAAI,OAAOA,IAAG;AAC1B,gBAAM,qBAAqB,MAAM;AAC/B,gBAAI,IAAI,oBAAoB,WAAW;AACrC,mBAAK,EAAE,MAAM,SAAS,KAAK,kBAAkB,CAAC;AAAA,YAChD;AAAA,UACF;AACA,cAAI,iBAAiB,oBAAoB,kBAAkB;AAC3D,iBAAO,MAAM;AACX,gBAAI,oBAAoB,oBAAoB,kBAAkB;AAAA,UAChE;AAAA,QACF;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,MAAM,CAACA,SAAQA,KAAI;AAAA,QACnB,aAAa,CAACA,SAAQA,KAAI,UAAUA,KAAI,WAAW,SAAS;AAAA,QAC5D,cAAc,CAACA,SAAQA,KAAI,UAAU;AAAA,MACvC;AAAA,MACA,SAAS;AAAA,QACP,aAAaA,MAAK;AAChB,gBAAM,QAAQ,UAAUA,KAAI,YAAYA,KAAI,KAAK;AACjD,cAAI,MAAMA,MAAK,KAAK;AAAA,QACtB;AAAA,QACA,aAAaA,MAAK;AAChB,gBAAM,QAAQ,UAAUA,KAAI,YAAYA,KAAI,KAAK;AACjD,cAAI,MAAMA,MAAK,KAAK;AAAA,QACtB;AAAA,QACA,eAAeA,MAAK;AAClB,gBAAM,EAAE,cAAc,eAAe,IAAI,eAAeA,IAAG;AAC3D,UAAAA,KAAI,cAAc;AAClB,UAAAA,KAAI,iBAAiB;AAAA,QACvB;AAAA,QACA,SAASA,MAAK,KAAK;AACjB,gBAAM,QAAQ,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,OAAOA,KAAI,WAAW,SAAS,CAAC,CAAC;AACxE,cAAI,MAAMA,MAAK,KAAK;AAAA,QACtB;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAM,kBAAkB,CAAC,QAAwB;AAC/C,QAAM,eAAe,IAAI,gBAAgB,GAAG;AAC5C,MAAI,CAAC;AAAc;AACnB,MAAI,gBAAgB,IAAI,aAAa,sBAAsB,CAAC;AAC5D,MAAI,gBAAgB,IAAI,eAAe,IAAI,cAAc,QAAQ,IAAI,cAAc;AACnF,MAAI,aAAa,IAAI,IAAI,YAAY,GAAG,EAAE,IAAI,CAAC,UAAU,MAAM,sBAAsB,CAAC,CAAC;AACzF;AAEA,IAAM,SAAS;AAAA,EACb,QAAQ,CAAC,QAAwB;AAC/B,QAAI,gBAAgB,EAAE,OAAO,IAAI,MAAM,CAAC;AAAA,EAC1C;AACF;AAEA,IAAM,MAAM;AAAA,EACV,OAAO,CAAC,KAAqB,UAAkB;AAC7C,QAAI,QAAQ,IAAI,OAAO,KAAK;AAAG;AAC/B,QAAI,QAAQ;AACZ,WAAO,OAAO,GAAG;AAAA,EACnB;AACF;","names":["isNumber","ctx"]}