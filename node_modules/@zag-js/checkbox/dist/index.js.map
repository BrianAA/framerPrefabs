{"version":3,"sources":["../src/index.ts","../src/checkbox.anatomy.ts","../src/checkbox.connect.ts","../src/checkbox.dom.ts","../src/checkbox.machine.ts"],"sourcesContent":["export { anatomy } from \"./checkbox.anatomy\"\nexport { connect } from \"./checkbox.connect\"\nexport { machine } from \"./checkbox.machine\"\nexport type {\n  MachineApi as Api,\n  CheckedChangeDetails,\n  CheckedState,\n  UserDefinedContext as Context,\n  ElementIds,\n} from \"./checkbox.types\"\n","import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"checkbox\").parts(\"root\", \"label\", \"control\", \"indicator\")\nexport const parts = anatomy.build()\n","import { dataAttr } from \"@zag-js/dom-query\"\nimport type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { visuallyHiddenStyle } from \"@zag-js/visually-hidden\"\nimport { parts } from \"./checkbox.anatomy\"\nimport { dom } from \"./checkbox.dom\"\nimport type { CheckedState, MachineApi, Send, State } from \"./checkbox.types\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): MachineApi<T> {\n  const isDisabled = state.context.isDisabled\n  const isFocused = !isDisabled && state.context.focused\n  const isChecked = state.context.isChecked\n  const isIndeterminate = state.context.isIndeterminate\n\n  const dataAttrs = {\n    \"data-active\": dataAttr(state.context.active),\n    \"data-focus\": dataAttr(isFocused),\n    \"data-hover\": dataAttr(state.context.hovered),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-state\": isIndeterminate ? \"indeterminate\" : state.context.checked ? \"checked\" : \"unchecked\",\n    \"data-invalid\": dataAttr(state.context.invalid),\n  }\n\n  return {\n    isChecked,\n    isDisabled,\n    isIndeterminate,\n    isFocused,\n    checkedState: state.context.checked,\n\n    setChecked(checked: CheckedState) {\n      send({ type: \"CHECKED.SET\", checked, isTrusted: false })\n    },\n\n    toggleChecked() {\n      send({ type: \"CHECKED.TOGGLE\", checked: isChecked, isTrusted: false })\n    },\n\n    rootProps: normalize.label({\n      ...parts.root.attrs,\n      ...dataAttrs,\n      dir: state.context.dir,\n      id: dom.getRootId(state.context),\n      htmlFor: dom.getHiddenInputId(state.context),\n      onPointerMove() {\n        if (isDisabled) return\n        send({ type: \"CONTEXT.SET\", context: { hovered: true } })\n      },\n      onPointerLeave() {\n        if (isDisabled) return\n        send({ type: \"CONTEXT.SET\", context: { hovered: false } })\n      },\n      onPointerDown(event) {\n        if (isDisabled) return\n        // On pointerdown, the input blurs and returns focus to the `body`,\n        // we need to prevent this.\n        if (isFocused && event.pointerType === \"mouse\") {\n          event.preventDefault()\n        }\n        send({ type: \"CONTEXT.SET\", context: { active: true } })\n      },\n      onPointerUp() {\n        if (isDisabled) return\n        send({ type: \"CONTEXT.SET\", context: { active: false } })\n      },\n      onClick(event) {\n        if (event.target === dom.getHiddenInputEl(state.context)) {\n          event.stopPropagation()\n        }\n      },\n    }),\n\n    labelProps: normalize.element({\n      ...parts.label.attrs,\n      ...dataAttrs,\n      dir: state.context.dir,\n      id: dom.getLabelId(state.context),\n    }),\n\n    controlProps: normalize.element({\n      ...parts.control.attrs,\n      ...dataAttrs,\n      dir: state.context.dir,\n      id: dom.getControlId(state.context),\n      \"aria-hidden\": true,\n    }),\n\n    indicatorProps: normalize.element({\n      ...parts.indicator.attrs,\n      ...dataAttrs,\n      dir: state.context.dir,\n      hidden: !isIndeterminate && !state.context.checked,\n    }),\n\n    hiddenInputProps: normalize.input({\n      id: dom.getHiddenInputId(state.context),\n      type: \"checkbox\",\n      required: state.context.required,\n      defaultChecked: isChecked,\n      disabled: isDisabled,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"aria-labelledby\": dom.getLabelId(state.context),\n      \"aria-invalid\": state.context.invalid,\n      name: state.context.name,\n      form: state.context.form,\n      value: state.context.value,\n      style: visuallyHiddenStyle,\n      onChange(event) {\n        const checked = event.currentTarget.checked\n        send({ type: \"CHECKED.SET\", checked, isTrusted: true })\n      },\n      onBlur() {\n        send({ type: \"CONTEXT.SET\", context: { focused: false } })\n      },\n      onFocus() {\n        send({ type: \"CONTEXT.SET\", context: { focused: true } })\n      },\n      onKeyDown(event) {\n        if (event.key === \" \") {\n          send({ type: \"CONTEXT.SET\", context: { active: true } })\n        }\n      },\n      onKeyUp(event) {\n        if (event.key === \" \") {\n          send({ type: \"CONTEXT.SET\", context: { active: false } })\n        }\n      },\n    }),\n  }\n}\n","import { createScope } from \"@zag-js/dom-query\"\nimport type { MachineContext as Ctx } from \"./checkbox.types\"\n\nexport const dom = createScope({\n  getRootId: (ctx: Ctx) => ctx.ids?.root ?? `checkbox:${ctx.id}`,\n  getLabelId: (ctx: Ctx) => ctx.ids?.label ?? `checkbox:${ctx.id}:label`,\n  getControlId: (ctx: Ctx) => ctx.ids?.control ?? `checkbox:${ctx.id}:control`,\n  getHiddenInputId: (ctx: Ctx) => ctx.ids?.hiddenInput ?? `checkbox:${ctx.id}:hidden`,\n  getRootEl: (ctx: Ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getHiddenInputEl: (ctx: Ctx) => dom.getById<HTMLInputElement>(ctx, dom.getHiddenInputId(ctx)),\n})\n","import { createMachine, guards } from \"@zag-js/core\"\nimport { dispatchInputCheckedEvent, trackFormControl } from \"@zag-js/form-utils\"\nimport { compact, isEqual } from \"@zag-js/utils\"\nimport { dom } from \"./checkbox.dom\"\nimport type { CheckedState, MachineContext, MachineState, UserDefinedContext } from \"./checkbox.types\"\n\nconst { not } = guards\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      id: \"checkbox\",\n      initial: \"ready\",\n\n      context: {\n        checked: false,\n        value: \"on\",\n        disabled: false,\n        ...ctx,\n        fieldsetDisabled: false,\n      },\n\n      watch: {\n        disabled: \"removeFocusIfNeeded\",\n        checked: \"syncInputElement\",\n      },\n\n      activities: [\"trackFormControlState\"],\n\n      on: {\n        \"CHECKED.TOGGLE\": [\n          {\n            guard: not(\"isTrusted\"),\n            actions: [\"toggleChecked\", \"dispatchChangeEvent\"],\n          },\n          {\n            actions: [\"toggleChecked\"],\n          },\n        ],\n        \"CHECKED.SET\": [\n          {\n            guard: not(\"isTrusted\"),\n            actions: [\"setChecked\", \"dispatchChangeEvent\"],\n          },\n          {\n            actions: [\"setChecked\"],\n          },\n        ],\n        \"CONTEXT.SET\": {\n          actions: [\"setContext\"],\n        },\n      },\n\n      computed: {\n        isIndeterminate: (ctx) => isIndeterminate(ctx.checked),\n        isChecked: (ctx) => isChecked(ctx.checked),\n        isDisabled: (ctx) => !!ctx.disabled || ctx.fieldsetDisabled,\n      },\n\n      states: {\n        ready: {},\n      },\n    },\n    {\n      guards: {\n        isTrusted: (_ctx, evt) => !!evt.isTrusted,\n      },\n      activities: {\n        trackFormControlState(ctx, _evt, { send, initialContext }) {\n          return trackFormControl(dom.getHiddenInputEl(ctx), {\n            onFieldsetDisabledChange(disabled) {\n              ctx.fieldsetDisabled = disabled\n            },\n            onFormReset() {\n              send({ type: \"CHECKED.SET\", checked: !!initialContext.checked })\n            },\n          })\n        },\n      },\n\n      actions: {\n        setContext(ctx, evt) {\n          Object.assign(ctx, evt.context)\n        },\n        syncInputElement(ctx) {\n          const inputEl = dom.getHiddenInputEl(ctx)\n          if (!inputEl) return\n          inputEl.checked = ctx.isChecked\n          inputEl.indeterminate = ctx.isIndeterminate\n        },\n        removeFocusIfNeeded(ctx) {\n          if (ctx.disabled && ctx.focused) {\n            ctx.focused = false\n          }\n        },\n        setChecked(ctx, evt) {\n          set.checked(ctx, evt.checked)\n        },\n        toggleChecked(ctx) {\n          const checked = isIndeterminate(ctx.checked) ? true : !ctx.checked\n          set.checked(ctx, checked)\n        },\n        dispatchChangeEvent(ctx) {\n          const inputEl = dom.getHiddenInputEl(ctx)\n          dispatchInputCheckedEvent(inputEl, { checked: isChecked(ctx.checked) })\n        },\n      },\n    },\n  )\n}\n\nfunction isIndeterminate(checked?: CheckedState): checked is \"indeterminate\" {\n  return checked === \"indeterminate\"\n}\n\nfunction isChecked(checked?: CheckedState): checked is boolean {\n  return isIndeterminate(checked) ? false : !!checked\n}\n\nconst invoke = {\n  change: (ctx: MachineContext) => {\n    ctx.onCheckedChange?.({ checked: ctx.checked })\n  },\n}\n\nconst set = {\n  checked: (ctx: MachineContext, checked: CheckedState) => {\n    if (isEqual(ctx.checked, checked)) return\n    ctx.checked = checked\n    invoke.change(ctx)\n  },\n}\n"],"mappings":"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","names":["import_dom_query","isChecked","isIndeterminate","ctx"]}