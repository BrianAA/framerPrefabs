import { InteractOutsideHandlers } from '@zag-js/interact-outside';
export { FocusOutsideEvent, InteractOutsideEvent, InteractOutsideHandlers, PointerDownOutsideEvent } from '@zag-js/interact-outside';

type MaybeElement = HTMLElement | null;
type Container = MaybeElement | Array<MaybeElement>;
type NodeOrFn = MaybeElement | (() => MaybeElement);
interface DismissableElementHandlers extends InteractOutsideHandlers {
    /**
     * Function called when the escape key is pressed
     */
    onEscapeKeyDown?: (event: KeyboardEvent) => void;
}
interface DismissableElementOptions extends DismissableElementHandlers {
    debug?: boolean;
    pointerBlocking?: boolean;
    onDismiss: () => void;
    exclude?: Container | (() => Container);
    defer?: boolean;
}
declare function trackDismissableElement(nodeOrFn: NodeOrFn, options: DismissableElementOptions): () => void;

export { type DismissableElementHandlers, type DismissableElementOptions, trackDismissableElement };
