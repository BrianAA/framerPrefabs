{"version":3,"sources":["../src/progress.anatomy.ts","../src/progress.dom.ts","../src/progress.connect.ts","../src/progress.machine.ts"],"sourcesContent":["import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"progress\").parts(\n  \"root\",\n  \"label\",\n  \"track\",\n  \"range\",\n  \"valueText\",\n  \"indicator\",\n  \"circle\",\n  \"circleTrack\",\n  \"circleRange\",\n)\n\nexport const parts = anatomy.build()\n","import { createScope } from \"@zag-js/dom-query\"\nimport type { MachineContext as Ctx } from \"./progress.types\"\n\nexport const dom = createScope({\n  getRootId: (ctx: Ctx) => `progress-${ctx.id}`,\n  getTrackId: (ctx: Ctx) => `progress-${ctx.id}-track`,\n  getLabelId: (ctx: Ctx) => `progress-${ctx.id}-label`,\n  getCircleId: (ctx: Ctx) => `progress-${ctx.id}-circle`,\n})\n","import type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { parts } from \"./progress.anatomy\"\nimport { dom } from \"./progress.dom\"\nimport type { MachineApi, MachineContext, ProgressState, Send, State } from \"./progress.types\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): MachineApi<T> {\n  const percent = state.context.percent\n  const max = state.context.max\n  const min = state.context.min\n\n  const orientation = state.context.orientation\n  const translations = state.context.translations\n  const indeterminate = state.context.isIndeterminate\n\n  const value = state.context.value\n  const valueAsString = translations.value({ value, max, percent, min })\n  const progressState = getProgressState(value, max)\n\n  const progressbarProps = {\n    role: \"progressbar\",\n    \"aria-label\": valueAsString,\n    \"data-max\": max,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": value ?? undefined,\n    \"data-orientation\": orientation,\n    \"data-state\": progressState,\n  }\n\n  const circleProps = getCircleProps(state.context)\n\n  return {\n    value,\n    valueAsString,\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value })\n    },\n    setToMax() {\n      send({ type: \"VALUE.SET\", value: max })\n    },\n\n    rootProps: normalize.element({\n      dir: state.context.dir,\n      ...parts.root.attrs,\n      id: dom.getRootId(state.context),\n      \"data-max\": max,\n      \"data-value\": value ?? undefined,\n      \"data-state\": progressState,\n      \"data-orientation\": orientation,\n      style: {\n        \"--percent\": indeterminate ? undefined : percent,\n      },\n    }),\n\n    labelProps: normalize.element({\n      dir: state.context.dir,\n      id: dom.getLabelId(state.context),\n      ...parts.label.attrs,\n      \"data-orientation\": orientation,\n    }),\n\n    valueTextProps: normalize.element({\n      dir: state.context.dir,\n      \"aria-live\": \"polite\",\n      ...parts.valueText.attrs,\n    }),\n\n    trackProps: normalize.element({\n      dir: state.context.dir,\n      id: dom.getTrackId(state.context),\n      ...parts.track.attrs,\n      ...progressbarProps,\n    }),\n\n    rangeProps: normalize.element({\n      dir: state.context.dir,\n      ...parts.range.attrs,\n      \"data-orientation\": orientation,\n      \"data-state\": progressState,\n      style: {\n        [state.context.isHorizontal ? \"width\" : \"height\"]: indeterminate ? undefined : `${percent}%`,\n      },\n    }),\n\n    circleProps: normalize.element({\n      dir: state.context.dir,\n      id: dom.getCircleId(state.context),\n      ...parts.circle.attrs,\n      ...progressbarProps,\n      ...circleProps.root,\n    }),\n\n    circleTrackProps: normalize.element({\n      dir: state.context.dir,\n      \"data-orientation\": orientation,\n      ...parts.circleTrack.attrs,\n      ...circleProps.track,\n    }),\n\n    circleRangeProps: normalize.element({\n      dir: state.context.dir,\n      ...parts.circleRange.attrs,\n      ...circleProps.range,\n      \"data-state\": progressState,\n    }),\n\n    getIndicatorProps(props) {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.indicator.attrs,\n        \"data-state\": props.state,\n        hidden: props.state !== progressState,\n      })\n    },\n  }\n}\n\nfunction getProgressState(value: number | null, maxValue: number): ProgressState {\n  return value == null ? \"indeterminate\" : value === maxValue ? \"complete\" : \"loading\"\n}\n\nfunction getCircleProps(ctx: MachineContext) {\n  const determinant = ctx.isIndeterminate ? undefined : ctx.percent * 2.64\n  const circleProps = {\n    style: {\n      cx: \"50px\",\n      cy: \"50px\",\n      r: \"42px\",\n      fill: \"transparent\",\n      strokeWidth: \"var(--thickness)\",\n    },\n  }\n  return {\n    root: {\n      viewBox: \"0 0 100 100\",\n      style: {\n        width: \"var(--size)\",\n        height: \"var(--size)\",\n      },\n    },\n    track: circleProps,\n    range: {\n      style: {\n        ...circleProps.style,\n        strokeDashoffset: \"66px\",\n        strokeDasharray: determinant != null ? `${determinant} ${264 - determinant}` : undefined,\n      },\n    },\n  }\n}\n","import { createMachine } from \"@zag-js/core\"\nimport { compact, isNumber } from \"@zag-js/utils\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./progress.types\"\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      id: \"progress\",\n      initial: \"idle\",\n      context: {\n        value: 50,\n        max: 100,\n        min: 0,\n        orientation: \"horizontal\",\n        translations: {\n          value: ({ percent }) => (percent === -1 ? \"loading...\" : `${percent} percent`),\n          ...ctx.translations,\n        },\n        ...ctx,\n      },\n      created: [\"validateContext\"],\n      computed: {\n        isIndeterminate: (ctx) => ctx.value === null,\n        percent(ctx) {\n          if (!isNumber(ctx.value)) return -1\n          return Math.round(((ctx.value - ctx.min) / (ctx.max - ctx.min)) * 100)\n        },\n        isAtMax: (ctx) => ctx.value === ctx.max,\n        isHorizontal: (ctx) => ctx.orientation === \"horizontal\",\n        isRtl: (ctx) => ctx.dir === \"rtl\",\n      },\n      states: {\n        idle: {\n          on: {\n            \"VALUE.SET\": {\n              actions: [\"setValue\"],\n            },\n          },\n        },\n      },\n    },\n    {\n      guards: {},\n      actions: {\n        setValue: (ctx, evt) => {\n          ctx.value = evt.value === null ? null : Math.max(0, Math.min(evt.value, ctx.max))\n        },\n        validateContext: (ctx) => {\n          if (!isValidMaxNumber(ctx.max)) {\n            throw new Error(`[Progress] Invalid max value: ${ctx.max}`)\n          }\n          if (!isValidValueNumber(ctx.value, ctx.max)) {\n            throw new Error(`[Progress] Invalid value: ${ctx.value}`)\n          }\n        },\n      },\n    },\n  )\n}\n\nfunction isValidMaxNumber(max: any): max is number {\n  return isNumber(max) && !isNaN(max) && max > 0\n}\n\nfunction isValidValueNumber(value: any, max: number): value is number {\n  return isNumber(value) && !isNaN(value) && value <= max && value >= 0\n}\n"],"mappings":"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","names":["value","ctx"]}