{"version":3,"sources":["../src/index.ts","../src/tabs.anatomy.ts","../src/tabs.connect.ts","../src/tabs.dom.ts","../src/tabs.machine.ts"],"sourcesContent":["export { anatomy } from \"./tabs.anatomy\"\nexport { connect } from \"./tabs.connect\"\nexport { machine } from \"./tabs.machine\"\nexport type {\n  MachineApi as Api,\n  ContentProps,\n  UserDefinedContext as Context,\n  ElementIds,\n  FocusChangeDetails,\n  IntlTranslations,\n  TriggerProps,\n  ValueChangeDetails,\n} from \"./tabs.types\"\n","import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"tabs\").parts(\"root\", \"list\", \"trigger\", \"content\", \"indicator\")\nexport const parts = anatomy.build()\n","import { getEventKey, type EventKeyMap } from \"@zag-js/dom-event\"\nimport { dataAttr, isSafari, isSelfEvent } from \"@zag-js/dom-query\"\nimport type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { parts } from \"./tabs.anatomy\"\nimport { dom } from \"./tabs.dom\"\nimport type { MachineApi, Send, State, TriggerProps } from \"./tabs.types\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): MachineApi<T> {\n  const translations = state.context.translations\n  const isFocused = state.matches(\"focused\")\n\n  function getTriggerState(props: TriggerProps) {\n    return {\n      isSelected: state.context.value === props.value,\n      isFocused: state.context.focusedValue === props.value,\n      isDisabled: !!props.disabled,\n    }\n  }\n\n  return {\n    value: state.context.value,\n    focusedValue: state.context.focusedValue,\n    previousValues: Array.from(state.context.previousValues),\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value })\n    },\n    clearValue() {\n      send({ type: \"CLEAR_VALUE\" })\n    },\n    setIndicatorRect(value) {\n      const id = dom.getTriggerId(state.context, value)\n      send({ type: \"SET_INDICATOR_RECT\", id })\n    },\n    getTriggerState,\n\n    rootProps: normalize.element({\n      ...parts.root.attrs,\n      id: dom.getRootId(state.context),\n      \"data-orientation\": state.context.orientation,\n      \"data-focus\": dataAttr(isFocused),\n      dir: state.context.dir,\n    }),\n\n    tablistProps: normalize.element({\n      ...parts.list.attrs,\n      id: dom.getTablistId(state.context),\n      role: \"tablist\",\n      dir: state.context.dir,\n      \"data-focus\": dataAttr(isFocused),\n      \"aria-orientation\": state.context.orientation,\n      \"data-orientation\": state.context.orientation,\n      \"aria-label\": translations.tablistLabel,\n      onKeyDown(event) {\n        if (!isSelfEvent(event)) return\n\n        const keyMap: EventKeyMap = {\n          ArrowDown() {\n            send(\"ARROW_DOWN\")\n          },\n          ArrowUp() {\n            send(\"ARROW_UP\")\n          },\n          ArrowLeft() {\n            send(\"ARROW_LEFT\")\n          },\n          ArrowRight() {\n            send(\"ARROW_RIGHT\")\n          },\n          Home() {\n            send(\"HOME\")\n          },\n          End() {\n            send(\"END\")\n          },\n          Enter() {\n            send({ type: \"ENTER\", value: state.context.focusedValue })\n          },\n        }\n\n        let key = getEventKey(event, state.context)\n        const exec = keyMap[key]\n\n        if (exec) {\n          event.preventDefault()\n          exec(event)\n        }\n      },\n    }),\n\n    getTriggerProps(props) {\n      const { value, disabled } = props\n      const triggerState = getTriggerState(props)\n\n      return normalize.button({\n        ...parts.trigger.attrs,\n        role: \"tab\",\n        type: \"button\",\n        disabled,\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        \"data-disabled\": dataAttr(disabled),\n        \"aria-disabled\": disabled,\n        \"data-value\": value,\n        \"aria-selected\": triggerState.isSelected,\n        \"data-selected\": dataAttr(triggerState.isSelected),\n        \"data-focus\": dataAttr(triggerState.isFocused),\n        \"aria-controls\": dom.getContentId(state.context, value),\n        \"data-ownedby\": dom.getTablistId(state.context),\n        id: dom.getTriggerId(state.context, value),\n        tabIndex: triggerState.isSelected ? 0 : -1,\n        onFocus() {\n          send({ type: \"TAB_FOCUS\", value })\n        },\n        onBlur(event) {\n          const target = event.relatedTarget as HTMLElement | null\n          if (target?.getAttribute(\"role\") !== \"tab\") {\n            send({ type: \"TAB_BLUR\" })\n          }\n        },\n        onClick(event) {\n          if (disabled) return\n          if (isSafari()) {\n            event.currentTarget.focus()\n          }\n          send({ type: \"TAB_CLICK\", value })\n        },\n      })\n    },\n\n    getContentProps(props) {\n      const { value } = props\n      const selected = state.context.value === value\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        id: dom.getContentId(state.context, value),\n        tabIndex: 0,\n        \"aria-labelledby\": dom.getTriggerId(state.context, value),\n        role: \"tabpanel\",\n        \"data-ownedby\": dom.getTablistId(state.context),\n        \"data-selected\": dataAttr(selected),\n        \"data-orientation\": state.context.orientation,\n        hidden: !selected,\n      })\n    },\n\n    indicatorProps: normalize.element({\n      id: dom.getIndicatorId(state.context),\n      ...parts.indicator.attrs,\n      dir: state.context.dir,\n      \"data-orientation\": state.context.orientation,\n      style: {\n        \"--transition-duration\": \"150ms\",\n        \"--transition-property\": \"left, right, top, bottom, width, height\",\n        \"--left\": state.context.indicatorRect?.left,\n        \"--top\": state.context.indicatorRect?.top,\n        \"--width\": state.context.indicatorRect?.width,\n        \"--height\": state.context.indicatorRect?.height,\n        position: \"absolute\",\n        willChange: \"var(--transition-property)\",\n        transitionProperty: \"var(--transition-property)\",\n        transitionDuration: state.context.canIndicatorTransition ? \"var(--transition-duration)\" : \"0ms\",\n        transitionTimingFunction: \"var(--transition-timing-function)\",\n        [state.context.orientation === \"horizontal\" ? \"left\" : \"top\"]:\n          state.context.orientation === \"horizontal\" ? \"var(--left)\" : \"var(--top)\",\n      },\n    }),\n  }\n}\n","import { createScope, itemById, nextById, prevById, queryAll } from \"@zag-js/dom-query\"\nimport { first, last } from \"@zag-js/utils\"\nimport type { MachineContext as Ctx } from \"./tabs.types\"\n\nexport const dom = createScope({\n  getRootId: (ctx: Ctx) => ctx.ids?.root ?? `tabs:${ctx.id}`,\n  getTablistId: (ctx: Ctx) => ctx.ids?.tablist ?? `tabs:${ctx.id}:list`,\n  getContentId: (ctx: Ctx, id: string) => ctx.ids?.content ?? `tabs:${ctx.id}:content-${id}`,\n  getTriggerId: (ctx: Ctx, id: string) => ctx.ids?.trigger ?? `tabs:${ctx.id}:trigger-${id}`,\n  getIndicatorId: (ctx: Ctx) => ctx.ids?.indicator ?? `tabs:${ctx.id}:indicator`,\n\n  getTablistEl: (ctx: Ctx) => dom.getById(ctx, dom.getTablistId(ctx)),\n  getContentEl: (ctx: Ctx, id: string) => dom.getById(ctx, dom.getContentId(ctx, id)),\n  getTriggerEl: (ctx: Ctx, id: string) => dom.getById(ctx, dom.getTriggerId(ctx, id)),\n  getIndicatorEl: (ctx: Ctx) => dom.getById(ctx, dom.getIndicatorId(ctx)),\n\n  getElements: (ctx: Ctx) => {\n    const ownerId = CSS.escape(dom.getTablistId(ctx))\n    const selector = `[role=tab][data-ownedby='${ownerId}']:not([disabled])`\n    return queryAll(dom.getTablistEl(ctx), selector)\n  },\n\n  getFirstEl: (ctx: Ctx) => first(dom.getElements(ctx)),\n  getLastEl: (ctx: Ctx) => last(dom.getElements(ctx)),\n  getNextEl: (ctx: Ctx, id: string) => nextById(dom.getElements(ctx), dom.getTriggerId(ctx, id), ctx.loop),\n  getPrevEl: (ctx: Ctx, id: string) => prevById(dom.getElements(ctx), dom.getTriggerId(ctx, id), ctx.loop),\n  getActiveContentEl: (ctx: Ctx) => {\n    if (!ctx.value) return\n    return dom.getContentEl(ctx, ctx.value)\n  },\n  getActiveTabEl: (ctx: Ctx) => {\n    if (!ctx.value) return\n    return dom.getTriggerEl(ctx, ctx.value)\n  },\n\n  getOffsetRect: (el: HTMLElement | undefined) => {\n    return {\n      left: el?.offsetLeft ?? 0,\n      top: el?.offsetTop ?? 0,\n      width: el?.offsetWidth ?? 0,\n      height: el?.offsetHeight ?? 0,\n    }\n  },\n\n  getRectById: (ctx: Ctx, id: string) => {\n    const tab = itemById(dom.getElements(ctx), dom.getTriggerId(ctx, id))\n    return dom.resolveRect(dom.getOffsetRect(tab))\n  },\n\n  resolveRect: (rect: Record<\"width\" | \"height\" | \"left\" | \"top\", number>) => ({\n    width: `${rect.width}px`,\n    height: `${rect.height}px`,\n    left: `${rect.left}px`,\n    top: `${rect.top}px`,\n  }),\n})\n","import { createMachine, guards } from \"@zag-js/core\"\nimport { nextTick, raf } from \"@zag-js/dom-query\"\nimport { trackElementRect } from \"@zag-js/element-rect\"\nimport { getFocusables } from \"@zag-js/tabbable\"\nimport { compact, isEqual } from \"@zag-js/utils\"\nimport { dom } from \"./tabs.dom\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./tabs.types\"\n\nconst { not } = guards\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      initial: \"idle\",\n\n      context: {\n        dir: \"ltr\",\n        orientation: \"horizontal\",\n        activationMode: \"automatic\",\n        value: null,\n        focusedValue: null,\n        previousValues: [],\n        indicatorRect: {\n          left: \"0px\",\n          top: \"0px\",\n          width: \"0px\",\n          height: \"0px\",\n        },\n        canIndicatorTransition: false,\n        isIndicatorRendered: false,\n        loop: true,\n        translations: {},\n        ...ctx,\n      },\n\n      computed: {\n        isHorizontal: (ctx) => ctx.orientation === \"horizontal\",\n        isVertical: (ctx) => ctx.orientation === \"vertical\",\n      },\n\n      created: [\"setPrevSelectedTabs\"],\n\n      entry: [\"checkRenderedElements\", \"syncIndicatorRect\", \"setContentTabIndex\"],\n\n      exit: [\"cleanupObserver\"],\n\n      watch: {\n        value: [\"enableIndicatorTransition\", \"setPrevSelectedTabs\", \"syncIndicatorRect\", \"setContentTabIndex\"],\n        dir: [\"syncIndicatorRect\"],\n        orientation: [\"syncIndicatorRect\"],\n      },\n\n      on: {\n        SET_VALUE: {\n          actions: \"setValue\",\n        },\n        CLEAR_VALUE: {\n          actions: \"clearValue\",\n        },\n        SET_INDICATOR_RECT: {\n          actions: \"setIndicatorRect\",\n        },\n      },\n\n      states: {\n        idle: {\n          on: {\n            TAB_FOCUS: [\n              {\n                guard: \"selectOnFocus\",\n                target: \"focused\",\n                actions: [\"setFocusedValue\", \"setValue\"],\n              },\n              {\n                target: \"focused\",\n                actions: \"setFocusedValue\",\n              },\n            ],\n            TAB_CLICK: {\n              target: \"focused\",\n              actions: [\"setFocusedValue\", \"setValue\"],\n            },\n          },\n        },\n        focused: {\n          on: {\n            TAB_CLICK: {\n              target: \"focused\",\n              actions: [\"setFocusedValue\", \"setValue\"],\n            },\n            ARROW_LEFT: {\n              guard: \"isHorizontal\",\n              actions: \"focusPrevTab\",\n            },\n            ARROW_RIGHT: {\n              guard: \"isHorizontal\",\n              actions: \"focusNextTab\",\n            },\n            ARROW_UP: {\n              guard: \"isVertical\",\n              actions: \"focusPrevTab\",\n            },\n            ARROW_DOWN: {\n              guard: \"isVertical\",\n              actions: \"focusNextTab\",\n            },\n            HOME: {\n              actions: \"focusFirstTab\",\n            },\n            END: {\n              actions: \"focusLastTab\",\n            },\n            ENTER: {\n              guard: not(\"selectOnFocus\"),\n              actions: \"setValue\",\n            },\n            TAB_FOCUS: [\n              {\n                guard: \"selectOnFocus\",\n                actions: [\"setFocusedValue\", \"setValue\"],\n              },\n              { actions: \"setFocusedValue\" },\n            ],\n            TAB_BLUR: {\n              target: \"idle\",\n              actions: \"clearFocusedValue\",\n            },\n          },\n        },\n      },\n    },\n    {\n      guards: {\n        isVertical: (ctx) => ctx.isVertical,\n        isHorizontal: (ctx) => ctx.isHorizontal,\n        selectOnFocus: (ctx) => ctx.activationMode === \"automatic\",\n      },\n\n      actions: {\n        setFocusedValue(ctx, evt) {\n          set.focusedValue(ctx, evt.value)\n        },\n        clearFocusedValue(ctx) {\n          set.focusedValue(ctx, null)\n        },\n        setValue(ctx, evt) {\n          set.value(ctx, evt.value)\n        },\n        clearValue(ctx) {\n          set.value(ctx, null)\n        },\n        focusFirstTab(ctx) {\n          raf(() => dom.getFirstEl(ctx)?.focus())\n        },\n        focusLastTab(ctx) {\n          raf(() => dom.getLastEl(ctx)?.focus())\n        },\n        focusNextTab(ctx) {\n          if (!ctx.focusedValue) return\n          const next = dom.getNextEl(ctx, ctx.focusedValue)\n          raf(() => next?.focus())\n        },\n        focusPrevTab(ctx) {\n          if (!ctx.focusedValue) return\n          const prev = dom.getPrevEl(ctx, ctx.focusedValue)\n          raf(() => prev?.focus())\n        },\n        checkRenderedElements(ctx) {\n          ctx.isIndicatorRendered = !!dom.getIndicatorEl(ctx)\n        },\n        setPrevSelectedTabs(ctx) {\n          if (ctx.value != null) {\n            ctx.previousValues = pushUnique(ctx.previousValues, ctx.value)\n          }\n        },\n        // if tab panel contains focusable elements, remove the tabindex attribute\n        setContentTabIndex(ctx) {\n          raf(() => {\n            const panel = dom.getActiveContentEl(ctx)\n            if (!panel) return\n            const focusables = getFocusables(panel)\n            if (focusables.length > 0) {\n              panel.removeAttribute(\"tabindex\")\n            } else {\n              panel.setAttribute(\"tabindex\", \"0\")\n            }\n          })\n        },\n        cleanupObserver(ctx) {\n          ctx.indicatorCleanup?.()\n        },\n        enableIndicatorTransition(ctx) {\n          ctx.canIndicatorTransition = true\n        },\n        setIndicatorRect(ctx, evt) {\n          const value = evt.id ?? ctx.value\n          if (!ctx.isIndicatorRendered || !value) return\n\n          const tabEl = dom.getTriggerEl(ctx, value)\n          if (!tabEl) return\n\n          ctx.indicatorRect = dom.getRectById(ctx, value)\n          nextTick(() => {\n            ctx.canIndicatorTransition = false\n          })\n        },\n        syncIndicatorRect(ctx) {\n          ctx.indicatorCleanup?.()\n\n          const value = ctx.value\n          if (!ctx.isIndicatorRendered || !value) return\n\n          const tabEl = dom.getActiveTabEl(ctx)\n          if (!tabEl) return\n\n          ctx.indicatorCleanup = trackElementRect(tabEl, {\n            getRect(el) {\n              return dom.getOffsetRect(el)\n            },\n            onChange(rect) {\n              ctx.indicatorRect = dom.resolveRect(rect)\n              nextTick(() => {\n                ctx.canIndicatorTransition = false\n              })\n            },\n          })\n        },\n      },\n    },\n  )\n}\n\n// function to push value array and remove previous instances of value\nfunction pushUnique(arr: string[], value: any) {\n  const newArr = Array.from(arr).slice()\n  const index = newArr.indexOf(value)\n  if (index > -1) {\n    newArr.splice(index, 1)\n  }\n  newArr.push(value)\n  return newArr\n}\n\nconst invoke = {\n  change: (ctx: MachineContext) => {\n    if (ctx.value == null) return\n    ctx.onValueChange?.({ value: ctx.value })\n  },\n  focusChange: (ctx: MachineContext) => {\n    if (ctx.focusedValue == null) return\n    ctx.onFocusChange?.({ focusedValue: ctx.focusedValue })\n  },\n}\n\nconst set = {\n  value: (ctx: MachineContext, value: string | null) => {\n    if (isEqual(value, ctx.value)) return\n    ctx.value = value\n    invoke.change(ctx)\n  },\n  focusedValue: (ctx: MachineContext, value: string | null) => {\n    if (isEqual(value, ctx.focusedValue)) return\n    ctx.focusedValue = value\n    invoke.focusChange(ctx)\n  },\n}\n"],"mappings":"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","names":["import_dom_query","import_dom_query","import_utils","ctx"]}