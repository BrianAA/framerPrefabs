{"version":3,"sources":["../src/index.ts","../src/presence.connect.ts","../src/presence.machine.ts"],"sourcesContent":["export { connect } from \"./presence.connect\"\nexport { machine } from \"./presence.machine\"\nexport type { UserDefinedContext as Context, MachineApi as Api } from \"./presence.types\"\n","import type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport type { MachineApi, Send, State } from \"./presence.types\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): MachineApi {\n  void normalize\n  return {\n    isPresent: state.matches(\"mounted\", \"unmountSuspended\"),\n\n    setNode(node: HTMLElement | null) {\n      if (!node) return\n      send({ type: \"NODE.SET\", node })\n    },\n  }\n}\n","import { createMachine, ref, guards } from \"@zag-js/core\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./presence.types\"\n\nconst { and, or } = guards\n\nfunction getAnimationName(styles?: CSSStyleDeclaration | null) {\n  return styles?.animationName || \"none\"\n}\n\nexport function machine(ctx: Partial<UserDefinedContext>) {\n  const initialState = ctx.present ? \"mounted\" : \"unmounted\"\n  return createMachine<MachineContext, MachineState>(\n    {\n      initial: initialState,\n      watch: {\n        present: [\"raisePresenceChange\", \"setPrevPresent\"],\n      },\n      context: {\n        node: null,\n        styles: null,\n        prevAnimationName: \"\",\n        present: false,\n        ...ctx,\n      },\n      on: {\n        \"NODE.SET\": {\n          actions: [\"setNode\", \"setStyles\"],\n        },\n        \"PRESENCE.CHANGED\": [\n          {\n            guard: \"isPresent\",\n            target: \"mounted\",\n            actions: [\"setPrevAnimationName\"],\n          },\n          {\n            guard: or(\"isAnimationNone\", \"isDisplayNone\"),\n            target: \"unmounted\",\n          },\n          {\n            guard: and(\"wasPresent\", \"isAnimating\"),\n            target: \"unmountSuspended\",\n          },\n          { target: \"unmounted\" },\n        ],\n      },\n      states: {\n        mounted: {\n          on: {\n            UNMOUNT: \"unmounted\",\n            \"ANIMATION.OUT\": \"unmountSuspended\",\n          },\n        },\n        unmountSuspended: {\n          activities: [\"trackAnimationEvents\"],\n          on: {\n            MOUNT: {\n              target: \"mounted\",\n              actions: [\"setPrevAnimationName\"],\n            },\n            \"ANIMATION.END\": \"unmounted\",\n          },\n        },\n        unmounted: {\n          entry: [\"clearPrevAnimationName\", \"invokeOnExitComplete\"],\n          on: {\n            MOUNT: \"mounted\",\n          },\n        },\n      },\n    },\n    {\n      guards: {\n        isPresent: (ctx) => !!ctx.present,\n        isAnimationNone: (ctx) => getAnimationName(ctx.styles) === \"none\",\n        isDisplayNone: (ctx) => ctx.styles?.display === \"none\",\n        wasPresent: (ctx) => !!ctx.prevPresent,\n        isAnimating: (ctx) => ctx.prevAnimationName !== getAnimationName(ctx.styles),\n      },\n      actions: {\n        invokeOnExitComplete(ctx) {\n          ctx.onExitComplete?.()\n        },\n        setNode(ctx, evt) {\n          ctx.node = ref(evt.node)\n        },\n        setStyles(ctx, evt) {\n          const win = evt.node.ownerDocument.defaultView || window\n          ctx.styles = ref(win.getComputedStyle(evt.node))\n        },\n        raisePresenceChange(_ctx, _evt, { send }) {\n          send(\"PRESENCE.CHANGED\")\n        },\n        setPrevPresent(ctx) {\n          ctx.prevPresent = ctx.present\n        },\n        setPrevAnimationName(ctx) {\n          requestAnimationFrame(() => {\n            ctx.prevAnimationName = getAnimationName(ctx.styles)\n          })\n        },\n        clearPrevAnimationName(ctx) {\n          ctx.prevAnimationName = \"\"\n        },\n      },\n      activities: {\n        trackAnimationEvents(ctx, _evt, { send }) {\n          const node = ctx.node\n          if (!node) return\n\n          const onStart = (event: AnimationEvent) => {\n            if (event.target === node) {\n              ctx.prevAnimationName = getAnimationName(ctx.styles)\n            }\n          }\n\n          const onEnd = (event: AnimationEvent) => {\n            const currentAnimationName = getAnimationName(ctx.styles)\n            const isCurrentAnimation = currentAnimationName.includes(event.animationName)\n            if (event.target === node && isCurrentAnimation) {\n              send(\"ANIMATION.END\")\n            }\n          }\n\n          node.addEventListener(\"animationstart\", onStart)\n          node.addEventListener(\"animationcancel\", onEnd)\n          node.addEventListener(\"animationend\", onEnd)\n          return () => {\n            node.removeEventListener(\"animationstart\", onStart)\n            node.removeEventListener(\"animationcancel\", onEnd)\n            node.removeEventListener(\"animationend\", onEnd)\n          }\n        },\n      },\n    },\n  )\n}\n"],"mappings":"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","names":["ctx"]}