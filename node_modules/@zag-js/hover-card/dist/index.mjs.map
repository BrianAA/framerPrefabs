{"version":3,"sources":["../src/hover-card.anatomy.ts","../src/hover-card.connect.ts","../src/hover-card.dom.ts","../src/hover-card.machine.ts"],"sourcesContent":["import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"hoverCard\").parts(\"arrow\", \"arrowTip\", \"trigger\", \"positioner\", \"content\")\nexport const parts = anatomy.build()\n","import { getPlacementStyles } from \"@zag-js/popper\"\nimport type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { parts } from \"./hover-card.anatomy\"\nimport { dom } from \"./hover-card.dom\"\nimport type { MachineApi, Send, State } from \"./hover-card.types\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): MachineApi<T> {\n  const isOpen = state.hasTag(\"open\")\n\n  const popperStyles = getPlacementStyles({\n    ...state.context.positioning,\n    placement: state.context.currentPlacement,\n  })\n\n  return {\n    isOpen,\n    open() {\n      send(\"OPEN\")\n    },\n    close() {\n      send(\"CLOSE\")\n    },\n    reposition(options = {}) {\n      send({ type: \"SET_POSITIONING\", options })\n    },\n\n    arrowProps: normalize.element({\n      id: dom.getArrowId(state.context),\n      ...parts.arrow.attrs,\n      dir: state.context.dir,\n      style: popperStyles.arrow,\n    }),\n\n    arrowTipProps: normalize.element({\n      ...parts.arrowTip.attrs,\n      dir: state.context.dir,\n      style: popperStyles.arrowTip,\n    }),\n\n    triggerProps: normalize.element({\n      ...parts.trigger.attrs,\n      dir: state.context.dir,\n      \"data-placement\": state.context.currentPlacement,\n      id: dom.getTriggerId(state.context),\n      \"data-state\": isOpen ? \"open\" : \"closed\",\n      onPointerEnter(event) {\n        if (event.pointerType === \"touch\") return\n        send({ type: \"POINTER_ENTER\", src: \"trigger\" })\n      },\n      onPointerLeave(event) {\n        if (event.pointerType === \"touch\") return\n        send({ type: \"POINTER_LEAVE\", src: \"trigger\" })\n      },\n      onFocus() {\n        send(\"TRIGGER_FOCUS\")\n      },\n      onBlur() {\n        send(\"TRIGGER_BLUR\")\n      },\n      onTouchStart(event) {\n        event.preventDefault()\n      },\n    }),\n\n    positionerProps: normalize.element({\n      id: dom.getPositionerId(state.context),\n      ...parts.positioner.attrs,\n      dir: state.context.dir,\n      style: popperStyles.floating,\n    }),\n\n    contentProps: normalize.element({\n      ...parts.content.attrs,\n      dir: state.context.dir,\n      id: dom.getContentId(state.context),\n      hidden: !isOpen,\n      \"data-state\": isOpen ? \"open\" : \"closed\",\n      \"data-placement\": state.context.currentPlacement,\n      onPointerEnter(event) {\n        if (event.pointerType === \"touch\") return\n        send({ type: \"POINTER_ENTER\", src: \"content\" })\n      },\n      onPointerLeave(event) {\n        if (event.pointerType === \"touch\") return\n        send({ type: \"POINTER_LEAVE\", src: \"content\" })\n      },\n    }),\n  }\n}\n","import { createScope } from \"@zag-js/dom-query\"\nimport type { MachineContext as Ctx } from \"./hover-card.types\"\n\nexport const dom = createScope({\n  getTriggerId: (ctx: Ctx) => ctx.ids?.trigger ?? `hover-card:${ctx.id}:trigger`,\n  getContentId: (ctx: Ctx) => ctx.ids?.content ?? `hover-card:${ctx.id}:content`,\n  getPositionerId: (ctx: Ctx) => ctx.ids?.positioner ?? `hover-card:${ctx.id}:popper`,\n  getArrowId: (ctx: Ctx) => ctx.ids?.arrow ?? `hover-card:${ctx.id}:arrow`,\n\n  getTriggerEl: (ctx: Ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getContentEl: (ctx: Ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: (ctx: Ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n})\n","import { createMachine, guards } from \"@zag-js/core\"\nimport { trackDismissableElement } from \"@zag-js/dismissable\"\nimport { getPlacement } from \"@zag-js/popper\"\nimport { compact } from \"@zag-js/utils\"\nimport { dom } from \"./hover-card.dom\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./hover-card.types\"\n\nconst { not } = guards\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      id: \"hover-card\",\n      initial: ctx.open ? \"open\" : \"closed\",\n      context: {\n        openDelay: 700,\n        closeDelay: 300,\n        currentPlacement: undefined,\n        ...ctx,\n        positioning: {\n          placement: \"bottom\",\n          ...ctx.positioning,\n        },\n      },\n\n      watch: {\n        open: [\"toggleVisibility\"],\n      },\n\n      states: {\n        closed: {\n          tags: [\"closed\"],\n          entry: [\"clearIsPointer\"],\n          on: {\n            POINTER_ENTER: {\n              target: \"opening\",\n              actions: [\"setIsPointer\"],\n            },\n            TRIGGER_FOCUS: \"opening\",\n            OPEN: \"opening\",\n          },\n        },\n\n        opening: {\n          tags: [\"closed\"],\n          after: {\n            OPEN_DELAY: {\n              target: \"open\",\n              actions: [\"invokeOnOpen\"],\n            },\n          },\n          on: {\n            POINTER_LEAVE: {\n              target: \"closed\",\n              actions: [\"invokeOnClose\"],\n            },\n            TRIGGER_BLUR: {\n              guard: not(\"isPointer\"),\n              target: \"closed\",\n              actions: [\"invokeOnClose\"],\n            },\n            CLOSE: {\n              target: \"closed\",\n              actions: [\"invokeOnClose\"],\n            },\n          },\n        },\n\n        open: {\n          tags: [\"open\"],\n          activities: [\"trackDismissableElement\", \"trackPositioning\"],\n          on: {\n            POINTER_ENTER: {\n              actions: [\"setIsPointer\"],\n            },\n            POINTER_LEAVE: \"closing\",\n            DISMISS: {\n              target: \"closed\",\n              actions: [\"invokeOnClose\"],\n            },\n            CLOSE: {\n              target: \"closed\",\n              actions: [\"invokeOnClose\"],\n            },\n            TRIGGER_BLUR: {\n              guard: not(\"isPointer\"),\n              target: \"closed\",\n              actions: [\"invokeOnClose\"],\n            },\n            SET_POSITIONING: {\n              actions: \"reposition\",\n            },\n          },\n        },\n\n        closing: {\n          tags: [\"open\"],\n          activities: [\"trackPositioning\"],\n          after: {\n            CLOSE_DELAY: {\n              target: \"closed\",\n              actions: [\"invokeOnClose\"],\n            },\n          },\n          on: {\n            POINTER_ENTER: {\n              target: \"open\",\n              // no need to invokeOnOpen here because it's still open (but about to close)\n              actions: [\"setIsPointer\"],\n            },\n          },\n        },\n      },\n    },\n    {\n      guards: {\n        isPointer: (ctx) => !!ctx.isPointer,\n      },\n      activities: {\n        trackPositioning(ctx) {\n          ctx.currentPlacement = ctx.positioning.placement\n          const getPositionerEl = () => dom.getPositionerEl(ctx)\n          return getPlacement(dom.getTriggerEl(ctx), getPositionerEl, {\n            ...ctx.positioning,\n            defer: true,\n            onComplete(data) {\n              ctx.currentPlacement = data.placement\n            },\n            onCleanup() {\n              ctx.currentPlacement = undefined\n            },\n          })\n        },\n        trackDismissableElement(ctx, _evt, { send }) {\n          const getContentEl = () => dom.getContentEl(ctx)\n          return trackDismissableElement(getContentEl, {\n            defer: true,\n            exclude: [dom.getTriggerEl(ctx)],\n            onDismiss() {\n              send({ type: \"DISMISS\" })\n            },\n            onFocusOutside(event) {\n              event.preventDefault()\n            },\n          })\n        },\n      },\n      actions: {\n        invokeOnClose(ctx) {\n          ctx.onOpenChange?.({ open: false })\n        },\n        invokeOnOpen(ctx) {\n          ctx.onOpenChange?.({ open: true })\n        },\n        setIsPointer(ctx) {\n          ctx.isPointer = true\n        },\n        clearIsPointer(ctx) {\n          ctx.isPointer = false\n        },\n        reposition(ctx, evt) {\n          const getPositionerEl = () => dom.getPositionerEl(ctx)\n          getPlacement(dom.getTriggerEl(ctx), getPositionerEl, {\n            ...ctx.positioning,\n            ...evt.options,\n            defer: true,\n            listeners: false,\n            onComplete(data) {\n              ctx.currentPlacement = data.placement\n            },\n          })\n        },\n        toggleVisibility(ctx, _evt, { send }) {\n          send({ type: ctx.open ? \"OPEN\" : \"CLOSE\", src: \"controlled\" })\n        },\n      },\n      delays: {\n        OPEN_DELAY: (ctx) => ctx.openDelay,\n        CLOSE_DELAY: (ctx) => ctx.closeDelay,\n      },\n    },\n  )\n}\n"],"mappings":"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","names":["ctx"]}