import * as React from "react";
import {
    addPropertyControls,
    withCSS,
    callEach,
    cx,
    useVariantState,
    withMeasuredSize,
    LayoutGroup,
    Image,
    CycleVariantState,
    ControlType
} from "framer";

import {
    motion,
    SVG,
    Text
} from "framer";

const enabledGestures = {
    "ISAQETXeP": {
        "hover": true,
        "pressed": true
    }
};

const humanReadableVariantMap = {};

const transitions = {
    "default": {
        "type": "spring",
        "ease": [0.44, 0, 0.56, 1],
        "duration": 0.3,
        "delay": 0,
        "stiffness": 500,
        "damping": 60,
        "mass": 1
    }
};

const Component = React.forwardRef(function ({
    style = {
        width: "100%",
        height: "100%",
        position: "relative"
    },
    className,
    layoutId,
    width,
    height,
    variant: outerVariant = "ISAQETXeP",
    title: jCQk6B4ns = "GET STARTED",
    ...restProps
}, ref) {

    const outerVariantId = humanReadableVariantMap[outerVariant];
    const variant = outerVariantId || outerVariant;

    const variantProps = {
        "ISAQETXeP-hover": {
            "D_nZ4CCpB": {
                "fill": "var(--token-43ee07e2-b43f-43da-ac93-62e6b697458f, rgb(255, 255, 255)) /* {\"name\":\"#FFFFFF\"} */"
            },
            "WVJc85dtQ": {
                "rawHTML": "<div style='font-size: 0; line-height: 0; tab-size: 4; white-space: pre-wrap; word-wrap: break-word'><div style='direction: ltr; font-size: 0'><span style='-webkit-text-fill-color: var(--token-43ee07e2-b43f-43da-ac93-62e6b697458f, rgb(255, 255, 255)) /* {&quot;name&quot;:&quot;#FFFFFF&quot;} */; font-family: &quot;Roboto&quot;, sans-serif; font-size: 32px; font-style: normal; font-weight: 700; letter-spacing: 0px; line-height: 1.2'>GET STARTED</span><br></div></div>",
                "fonts": ["GF;Roboto-700"]
            }
        },
        "ISAQETXeP-pressed": {
            "D_nZ4CCpB": {
                "fill": "var(--token-43ee07e2-b43f-43da-ac93-62e6b697458f, rgb(255, 255, 255)) /* {\"name\":\"#FFFFFF\"} */"
            },
            "WVJc85dtQ": {
                "rawHTML": "<div style='font-size: 0; line-height: 0; tab-size: 4; white-space: pre-wrap; word-wrap: break-word'><div style='direction: ltr; font-size: 0'><span style='-webkit-text-fill-color: var(--token-43ee07e2-b43f-43da-ac93-62e6b697458f, rgb(255, 255, 255)) /* {&quot;name&quot;:&quot;#FFFFFF&quot;} */; font-family: &quot;Roboto&quot;, sans-serif; font-size: 32px; font-style: normal; font-weight: 700; letter-spacing: 0px; line-height: 1.2'>GET STARTED</span><br></div></div>",
                "fonts": ["GF;Roboto-700"]
            }
        }
    };
    const {
        variants,
        baseVariant,
        gestureVariant,
        classNames,
        transition,
        setVariant,
        setGestureState,
        addVariantProps
    } = useVariantState({
        defaultVariant: "ISAQETXeP",
        variant,
        transitions,
        variantProps,
        enabledGestures
    });

    return (< LayoutGroup id={
        layoutId
    } >
        <
            motion.div {
            ...restProps
            }
            initial={
                variant
            }
            animate={
                variants
            }
            className={
                cx(className, classNames)
            }
            style={
                style
            }
            onHoverStart={
                () => setGestureState({
                    isHovered: true
                })
            }
            onHoverEnd={
                () => setGestureState({
                    isHovered: false
                })
            }
            onTapStart={
                () => setGestureState({
                    isPressed: true
                })
            }
            onTap={
                () => setGestureState({
                    isPressed: false
                })
            }
            ref={
                ref
            } >
            <
                motion.div layoutId="ISAQETXeP"
                style={
                    {
                        "borderBottomLeftRadius": 8,
                        "borderBottomRightRadius": 8,
                        "borderTopRightRadius": 8,
                        "borderTopLeftRadius": 8,
                        "boxShadow": "0px 0px 7px 0px rgba(0,0,0,0.25)",
                        "backgroundColor": "rgb(254, 227, 24)",
                        "rotate": 0
                    }
                }
                className="framer-ISAQETXeP"
                variants={
                    {
                        "ISAQETXeP-hover": {
                            "backgroundColor": "var(--token-37cbf438-9a56-4f97-b551-1ca84a25292c, rgb(194, 76, 46)) /* {\"name\":\"#C24C2E\"} */"
                        },
                        "ISAQETXeP-pressed": {
                            "backgroundColor": "var(--token-f622593e-4c5f-41a9-9330-a80fc48ff5bf, rgb(223, 84, 47)) /* {\"name\":\"#DF542F\"} */"
                        }
                    }
                }
                transition={
                    transition
                } {
                ...addVariantProps("ISAQETXeP")
                } > < SVG layoutId="D_nZ4CCpB"
                    style={
                        {
                            "rotate": 0
                        }
                    }
                    withExternalLayout={
                        true
                    }
                    intrinsicHeight={
                        102
                    }
                    intrinsicWidth={
                        100
                    }
                    className="framer-D_nZ4CCpB"
                    fill="var(--token-37cbf438-9a56-4f97-b551-1ca84a25292c, rgb(194, 76, 46)) /* {&quot;name&quot;:&quot;#C24C2E&quot;} */"
                    svg={
                        '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 102"><switch><g><path d="M56.4 94.8L84.3 67c3.6-3.6 3.6-9.3 0-12.9-3.6-3.6-9.3-3.6-12.9 0L59.1 66.4V11.6c0-5-4.1-9.1-9.1-9.1s-9.1 4.1-9.1 9.1v54.8L28.6 54.2c-3.6-3.6-9.3-3.6-12.9 0-1.8 1.8-2.7 4.1-2.7 6.4 0 2.3.9 4.7 2.7 6.4l27.8 27.8c1.7 1.7 4 2.7 6.4 2.7s4.8-1 6.5-2.7z"/></g></switch></svg>'
                    }
                    transition={
                        transition
                    } {
                    ...addVariantProps("D_nZ4CCpB")
                    }
                /><Text layoutId="WVJc85dtQ" style={{ "rotate": 0 }} withExternalLayout={true} verticalAlignment="top" __fromCanvasComponent={true} fonts={["GF;Roboto-700"]} autoSize={true} center="y" className="framer-WVJc85dtQ" rawHTML={`<div style='font-size: 0; line-height: 0; tab-size: 4; white-space: pre-wrap; word-wrap: break-word'><div style='direction: ltr; font-size: 0'><span style='-webkit-text-fill-color: var(--token-37cbf438-9a56-4f97-b551-1ca84a25292c, rgb(194, 76, 46)) / * {
                        & quot;name & quot;: & quot;#C24C2E & quot;
                    }*/; font-family: &quot;Roboto&quot;, sans-serif; font-size: 32px; font-style: normal; font-weight: 700; letter-spacing: 0px; line-height: 1.2'>GET STARTED</span > < br > < /div></div > `} text={jCQk6B4ns} transition={transition} {...addVariantProps("WVJc85dtQ")} /></motion.div>
        </motion.div>
    </LayoutGroup>);

});

const css = ` [data - border = "true"]::after {
                        content: "";border - width: var (--border - top - width, 0) var (--border - right - width, 0) var (--border - bottom - width, 0) var (--border - left - width, 0);border - color: var (--border - color, none);border - style: var (--border - style, none);width: 100 % ;height: 100 % ;position: absolute;box - sizing: border - box;left: 0;top: 0;border - radius: inherit;pointer - events: none;
                    }
                    .framer - D_nZ4CCpB {
                        position: absolute;width: 28 px;height: 29 px;left: 21 px;top: calc(50.00000000000002 % -29 px / 2);flex - shrink: 0;
                    }
                    .framer - WVJc85dtQ {
                        position: absolute;width: auto;height: auto;left: 57 px;top: 51 % ;flex - shrink: 0;overflow: visible;
                    }
                    .framer - ISAQETXeP {
                        position: absolute;width: 100 % ;height: 100 % ;overflow: visible;
                    }
                    .framer - v - ISAQETXeP.framer - ISAQETXeP {
                        cursor: pointer;
                    }
                    `

/**
 * This is a generated Framer component.
 * @framerVariables {"jCQk6B4ns":"title"}
 * @framerIntrinsicHeight 65
 * @framerIntrinsicWidth 286
 */
const FramerF4aXiTRe_: React.ComponentType = withCSS(Component, css);
export default FramerF4aXiTRe_;

FramerF4aXiTRe_.displayName = "/get started buton - tablet";

FramerF4aXiTRe_.defaultProps = { width: 286, height: 65 };

addPropertyControls(FramerF4aXiTRe_, { "jCQk6B4ns": { "type": ControlType.String, "title": "Title", "defaultValue": "GET STARTED" } });