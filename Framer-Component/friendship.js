import {
    jsx as _jsx,
    jsxs as _jsxs
} from "react/jsx-runtime"; // Generated by Framer (69b322d)
import * as React from "react";
import {
    motion,
    useActiveVariantCallback,
    LayoutGroup,
    Image as Image1,
    addFonts,
    withCSS,
    Text as Text1
} from "framer";
import {
    cx
} from "https://framer.com/m/framer/cx.js@^1.0.0";
import {
    useRandomID
} from "https://framer.com/m/framer/randomID.js@^2.0.0";
import {
    addPropertyControls,
    ControlType
} from "https://framer.com/m/framer/PropertyControls.js@^1.0.0";
import {
    useAddVariantProps
} from "https://framer.com/m/framer/useAddVariantProps.js@^1.0.0";
import {
    useVariantState
} from "https://framer.com/m/framer/useVariantState.js@^1.0.0";
const cycleOrder = ["xCpACYKLe", "xcwfD4wbI"];
const variantClassNames = {
    "xCpACYKLe": "framer-v-2ddxrq",
    "xcwfD4wbI": "framer-v-1tlqehn"
};
const humanReadableVariantMap = {
    "Variant 1": "xCpACYKLe",
    "Variant 2": "xcwfD4wbI"
};
const transitions = {
    "default": {
        "type": "spring",
        "ease": [0.44, 0, 0.56, 1],
        "duration": 0.3,
        "delay": 0,
        "stiffness": 500,
        "damping": 60,
        "mass": 1
    }
};
const Component = /*#__PURE__*/ React.forwardRef(function ({
    style,
    className,
    layoutId,
    width,
    height,
    variant: outerVariant = "xCpACYKLe",
    ...restProps
}, ref) {
    const outerVariantId = humanReadableVariantMap[outerVariant];
    const variant = outerVariantId || outerVariant;
    const {
        variants,
        baseVariant,
        gestureVariant,
        classNames,
        transition,
        setVariant,
        setGestureState
    } = useVariantState({
        defaultVariant: "xCpACYKLe",
        variant,
        transitions,
        variantClassNames,
        cycleOrder
    });
    const {
        activeVariantCallback,
        delay
    } = useActiveVariantCallback(baseVariant);
    const onTap1t8h2je = activeVariantCallback(async (...args) => {
        setVariant("xcwfD4wbI");
    });
    const onTap1kkuta7 = activeVariantCallback(async (...args) => {
        setVariant("xCpACYKLe");
    });
    const variantProps = React.useMemo(() => ({
        "xcwfD4wbI": {
            "xCpACYKLe": {
                "background": null,
                "data-framer-name": "Variant 2"
            },
            "uKKPIolOb": {
                "onTap": onTap1kkuta7,
                "data-highlight": true
            },
            "LZDCFoTtr": {
                "rawHTML": "<div style='font-size: 0; line-height: 0; tab-size: 4; white-space: inherit; word-wrap: inherit'><div style='direction: ltr; font-size: 0'><span style=''>üï∂</span><br></div></div>",
                "fonts": ["__SystemDefault-400-normal__"]
            },
            "MDnE_G308": {
                "onTap": undefined,
                "data-highlight": false
            },
            "PfHbhCWi7": {
                "rawHTML": "<div style='font-size: 0; line-height: 0; tab-size: 4; white-space: inherit; word-wrap: inherit'><div style='direction: ltr; font-size: 0'><span style=''>ü§ù</span><br></div></div>",
                "fonts": ["__SystemDefault-400-normal__"]
            }
        }
    }), [onTap1kkuta7]);
    const addVariantProps = useAddVariantProps(baseVariant, gestureVariant, variantProps);
    const defaultLayoutId = useRandomID();
    return ( /*#__PURE__*/ _jsx(LayoutGroup, {
        id: layoutId !== null && layoutId !== void 0 ? layoutId : defaultLayoutId,
        children: /*#__PURE__*/ _jsx(motion.div, {
            initial: variant,
            animate: variants,
            className: cx("framer-pVIIh", classNames),
            style: {
                "display": "contents"
            },
            onHoverStart: () => setGestureState({
                isHovered: true
            }),
            onHoverEnd: () => setGestureState({
                isHovered: false
            }),
            onTapStart: () => setGestureState({
                isPressed: true
            }),
            onTap: () => setGestureState({
                isPressed: false
            }),
            onTapCancel: () => setGestureState({
                isPressed: false
            }),
            children: /*#__PURE__*/ _jsxs(motion.div, {
                ...restProps,
                layoutId: "xCpACYKLe",
                className: cx("framer-2ddxrq", className),
                style: {
                    "borderBottomLeftRadius": 12,
                    "borderBottomRightRadius": 12,
                    "borderTopRightRadius": 12,
                    "borderTopLeftRadius": 12,
                    "--border-bottom-width": "2px",
                    "--border-top-width": "2px",
                    "--border-right-width": "2px",
                    "--border-left-width": "2px",
                    "--border-style": "solid",
                    "--border-color": "rgb(34, 34, 34)",
                    "backgroundColor": "transparent",
                    ...style
                },
                background: null,
                "data-framer-name": "Variant 1",
                "data-border": true,
                variants: {
                    "xcwfD4wbI": {
                        "backgroundColor": "transparent"
                    }
                },
                transition: transition,
                ref: ref,
                ...addVariantProps("xCpACYKLe"),
                children: [ /*#__PURE__*/ _jsx(Image1, {
                    layoutId: "dVAYjIRc_",
                    className: "framer-1kh7e25",
                    style: {},
                    background: {
                        "src": new URL("assets/ocbjo8dgLjiH9OhJoYBVfdh4o.jpg", import.meta.url).href,
                        "pixelWidth": 2731,
                        "pixelHeight": 4096,
                        "intrinsicWidth": 2731,
                        "intrinsicHeight": 4096,
                        "fit": "fill"
                    },
                    transition: transition,
                    ...addVariantProps("dVAYjIRc_")
                }), /*#__PURE__*/ _jsxs(motion.div, {
                    layoutId: "ErCIeWOCL",
                    className: "framer-103be16",
                    style: {},
                    background: null,
                    transition: transition,
                    ...addVariantProps("ErCIeWOCL"),
                    children: [ /*#__PURE__*/ _jsx(Text1, {
                        style: {
                            "--framer-font-family": "\"system-ui\", \"-apple-system\", \"BlinkMacSystemFont\", \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif, \"System Default\", serif",
                            "--framer-font-style": "italic",
                            "--framer-font-weight": 800,
                            "--framer-text-color": "rgb(0, 0, 0)",
                            "--framer-font-size": "64px",
                            "--framer-letter-spacing": "0px",
                            "--framer-text-transform": "none",
                            "--framer-text-decoration": "none",
                            "--framer-line-height": "1.2em",
                            "--framer-text-alignment": "start",
                            "--framer-link-text-decoration": "underline"
                        },
                        withExternalLayout: true,
                        verticalAlignment: "top",
                        __fromCanvasComponent: true,
                        fonts: ["__SystemDefault-800-italic__"],
                        center: "y",
                        layoutId: "OWiU_FZsB",
                        className: "framer-bu3kak",
                        rawHTML: "<div style='font-size: 0; line-height: 0; tab-size: 4; white-space: inherit; word-wrap: inherit'><div style='direction: ltr; font-size: 0'><span style=''>Vercel</span><br></div></div>",
                        transition: transition,
                        ...addVariantProps("OWiU_FZsB")
                    }), /*#__PURE__*/ _jsx(Text1, {
                        style: {
                            "--framer-font-family": "\"system-ui\", \"-apple-system\", \"BlinkMacSystemFont\", \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif, \"System Default\", serif",
                            "--framer-font-style": "italic",
                            "--framer-font-weight": 800,
                            "--framer-text-color": "rgb(0, 0, 0)",
                            "--framer-font-size": "64px",
                            "--framer-letter-spacing": "0px",
                            "--framer-text-transform": "none",
                            "--framer-text-decoration": "none",
                            "--framer-line-height": "1.2em",
                            "--framer-text-alignment": "start",
                            "--framer-link-text-decoration": "underline"
                        },
                        withExternalLayout: true,
                        verticalAlignment: "top",
                        __fromCanvasComponent: true,
                        fonts: ["__SystemDefault-800-italic__"],
                        center: "y",
                        layoutId: "EqueTuETs",
                        className: "framer-17qeglw",
                        rawHTML: "<div style='font-size: 0; line-height: 0; tab-size: 4; white-space: inherit; word-wrap: inherit'><div style='direction: ltr; font-size: 0'><span style=''>Framer</span><br></div></div>",
                        transition: transition,
                        ...addVariantProps("EqueTuETs")
                    })]
                }), /*#__PURE__*/ _jsx(motion.div, {
                    layoutId: "uKKPIolOb",
                    className: "framer-16p4fne",
                    style: {},
                    background: null,
                    transition: transition,
                    ...addVariantProps("uKKPIolOb"),
                    children: /*#__PURE__*/ _jsx(Text1, {
                        style: {
                            "--framer-font-family": "\"system-ui\", \"-apple-system\", \"BlinkMacSystemFont\", \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif, serif",
                            "--framer-text-color": "rgb(0, 0, 0)",
                            "--framer-font-size": "64px",
                            "--framer-letter-spacing": "0px",
                            "--framer-text-transform": "none",
                            "--framer-text-decoration": "none",
                            "--framer-line-height": "1.2em",
                            "--framer-text-alignment": "start",
                            "--framer-link-text-decoration": "underline"
                        },
                        withExternalLayout: true,
                        verticalAlignment: "top",
                        __fromCanvasComponent: true,
                        fonts: ["__SystemDefault-400-normal__"],
                        center: true,
                        layoutId: "LZDCFoTtr",
                        className: "framer-4tyukx",
                        rawHTML: "<div style='font-size: 0; line-height: 0; tab-size: 4; white-space: inherit; word-wrap: inherit'><div style='direction: ltr; font-size: 0'><span style=''>üï∂</span><br></div></div>",
                        transition: transition,
                        ...addVariantProps("LZDCFoTtr")
                    })
                }), /*#__PURE__*/ _jsx(motion.div, {
                    layoutId: "MDnE_G308",
                    className: "framer-1t8h2je",
                    style: {},
                    background: null,
                    "data-highlight": true,
                    onTap: onTap1t8h2je,
                    transition: transition,
                    ...addVariantProps("MDnE_G308"),
                    children: /*#__PURE__*/ _jsx(Text1, {
                        style: {
                            "--framer-font-family": "\"system-ui\", \"-apple-system\", \"BlinkMacSystemFont\", \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif, serif",
                            "--framer-text-color": "rgb(0, 0, 0)",
                            "--framer-font-size": "64px",
                            "--framer-letter-spacing": "0px",
                            "--framer-text-transform": "none",
                            "--framer-text-decoration": "none",
                            "--framer-line-height": "1.2em",
                            "--framer-text-alignment": "start",
                            "--framer-link-text-decoration": "underline"
                        },
                        withExternalLayout: true,
                        verticalAlignment: "top",
                        __fromCanvasComponent: true,
                        fonts: ["__SystemDefault-400-normal__"],
                        center: true,
                        layoutId: "PfHbhCWi7",
                        className: "framer-xi90ze",
                        rawHTML: "<div style='font-size: 0; line-height: 0; tab-size: 4; white-space: inherit; word-wrap: inherit'><div style='direction: ltr; font-size: 0'><span style=''>ü§ù</span><br></div></div>",
                        transition: transition,
                        ...addVariantProps("PfHbhCWi7")
                    })
                })]
            })
        })
    }));
});
const css = [".framer-pVIIh [data-border=\"true\"]::after { content: \"\"; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none;}", ".framer-pVIIh .framer-2ddxrq { position: relative; overflow: hidden; width: 1280px; height: 606px; }", ".framer-pVIIh .framer-1kh7e25 { position: absolute; overflow: visible; width: 1196px; height: 507px; left: calc(50.00000000000002% - 1196px/2); top: calc(49.83498349834986% - 507px/2); flex: none; }", ".framer-pVIIh .framer-103be16 { position: absolute; overflow: visible; width: 519px; height: 76px; left: calc(49.92187500000002% - 519px/2); top: calc(50.00000000000002% - 76px/2); flex: none; }", ".framer-pVIIh .framer-bu3kak { position: absolute; overflow: visible; width: auto; height: auto; left: 0px; top: 50%; flex: none; white-space: pre; }", ".framer-pVIIh .framer-17qeglw { position: absolute; overflow: visible; width: auto; height: auto; right: 0px; top: 50%; flex: none; white-space: pre; }", ".framer-pVIIh .framer-16p4fne { position: absolute; overflow: visible; width: 64px; height: 76px; left: 596px; top: -200px; flex: none; }", ".framer-pVIIh .framer-4tyukx, .framer-pVIIh .framer-xi90ze { position: absolute; overflow: visible; width: auto; height: auto; left: 50%; top: 50%; flex: none; white-space: pre; }", ".framer-pVIIh .framer-1t8h2je { position: absolute; cursor: pointer; overflow: visible; width: 64px; height: 76px; left: 596px; top: calc(50.00000000000002% - 76px/2); flex: none; }", ".framer-pVIIh.framer-v-1tlqehn .framer-16p4fne { width: 64px; height: 76px; right: auto; bottom: auto; left: 596px; top: calc(50.00000000000002% - 76px/2); flex: none; cursor: pointer; }", ".framer-pVIIh.framer-v-1tlqehn .framer-1t8h2je { width: 64px; height: 76px; right: auto; bottom: -200px; left: 596px; top: auto; flex: none; cursor: auto; }"];
/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 606
 * @framerIntrinsicWidth 1280
 * @framerCanvasComponentVariantDetails {"propertyName": "variant", "data": {"default": {"layout": ["fixed", "fixed"]}, "xcwfD4wbI": {"layout": ["fixed", "fixed"]}}}
 */
const FramerNarxCYkZP = withCSS(Component, css);
export default FramerNarxCYkZP;
FramerNarxCYkZP.displayName = "Friendship";
FramerNarxCYkZP.defaultProps = {
    "width": 1280,
    "height": 606
};
addPropertyControls(FramerNarxCYkZP, {
    "variant": {
        "type": ControlType.Enum,
        "title": "Variant",
        "options": ["xCpACYKLe", "xcwfD4wbI"],
        "optionTitles": ["Variant 1", "Variant 2"]
    }
});
addFonts(FramerNarxCYkZP, []);
export const __FramerMetadata__ = {
    "exports": {
        "Props": {
            "type": "tsType",
            "annotations": {
                "framerContractVersion": "1"
            }
        },
        "default": {
            "type": "reactComponent",
            "name": "FramerNarxCYkZP",
            "slots": [],
            "annotations": {
                "framerContractVersion": "1",
                "framerCanvasComponentVariantDetails": "{\"propertyName\": \"variant\", \"data\": {\"default\": {\"layout\": [\"fixed\", \"fixed\"]}, \"xcwfD4wbI\": {\"layout\": [\"fixed\", \"fixed\"]}}}",
                "framerIntrinsicHeight": "606",
                "framerIntrinsicWidth": "1280"
            }
        }
    }
}
//# sourceMappingURL=./NarxCYkZP.map